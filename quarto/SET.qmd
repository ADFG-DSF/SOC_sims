---
title: "Procedure for Estimating Sustainable Escapement Thresholds (SETs)"
author: "Adam Reimer"
format:
  html:
    embed-resources: true
editor: visual
toc: TRUE
number-sections: true
---

```{r include = FALSE}
packs <- c("tidyverse", "ggforce", "RcppRoll", "knitr", "flextable", "ggpubr", "ggpattern")
lapply(packs, require, character.only = TRUE)

# source functions
function_files <- list.files(path="..\\functions")
lapply(function_files, function(x) source(paste0("..\\functions\\", x)))

rep_scenarios_gp0 <- 
  readRDS(file = "..\\rep_scenarios_seqlb_scale_SOC.rds") 
fill_row <- rep_scenarios_gp0[1,] #add in scenario 2 which was removed bc no SOC listed in sims
fill_row$scenario <- 2
fill_row$pct_lb <- 1
fill_row$data <- fill_row$yr_SOC <- fill_row$data_jags <- fill_row$mod_gamma <- fill_row$mod_Ricker <- fill_row$set_est <- fill_row$set_estq10 <- fill_row$set_estq40 <- fill_row$set_estq60 <- fill_row$set_estq90 <- NA
rep_scenarios_gp <-
  rep_scenarios_gp0 %>%
  group_by(scenario) %>%
  mutate(set_est = map_dbl(mod_gamma, function(x) (x$q50$gamma[2] - 1) / x$q50$beta[2]),
         set_estq10 = quantile(set_est, 0.1),
         set_estq40 = quantile(set_est, 0.4),
         set_estq60 = quantile(set_est, 0.6),
         set_estq90 = quantile(set_est, 0.9)) %>%
  ungroup() %>%
  rbind(fill_row) %>%
  filter(pct_lb == 1) %>% #drop Seq<lb  in regime 2 sims
  arrange(lnalpha_1, sigma, gamma, pct_MSY) %>% # renumber scenarios
  rename(scenario0 = scenario) %>%
  mutate(scenario = cumsum(c(1, as.numeric(diff(scenario0)) != 0))) %>%
  select(names(rep_scenarios_gp0), starts_with("set")) %>%
  arrange(scenario, rep)
```

## Introduction

The stock of concern process requires a sustainable escapement threshold (SET) to be determined before a stock can be identified as a conservation concern although the ADF&G has yet to identify a reliable procedure to estimate a SET. Herein, I present a analytical procedure for estimating SETs for Alaskan salmon when spawner-recruit data is available and use simulation to explore the robustness and reliability of the proposed technique. This procedure is designed to be implemented when a salmon stock is failing to meet it's escapement goal, designed to be complementary to ADF&G's existing stock assessment techniques, intended to be conservative, and intended to be responsive to the spawner-recruit data available for the stock. Finaly, these results lay the foundation for an approximate SET when spawner-recruit data is lacking.

Let's begin by reviewing the codified definitions within the Sustainable Salmon Policy as they relate to conservation concerns.

::: {.callout-note appearance="simple" icon="false"}
### Codified SOC Definitions

*Conservation Concern*

Conservation concern means a concern arising from a chronic inability, despite the use of specific management measures, to maintain escapements for a stock above a sustainable escapement threshold (SET): a conservation concern is more severe than a management concern.

*SET*

"sustainable escapement threshold" or "SET" means a threshold level of escapement below which the ability of the salmon stock to sustain itself is jeopardized: in practice, an SET can be estimated based on lower ranges of historical escapement levels, for which the salmon stock has consistently demonstrated the ability to sustain itself: the SET is lower than the lower bound of the BEG and lower than the lower bound of the SEG: the SET is established by the department in consultation with the board, as needed, for salmon stocks of management or conservation concern.
:::

The definition of a conservation concern is clear, provided a SET has been established. In practice, the department has yet to set an SET which negates our ability to recommend a stock of conservation concern and leaves us venerable to other forms of conservation-based management.

Unfortunately, the definition of a SET is less clear. Issues with this definition include:

-   Commonly used spawner-recruit relationships assume per capita production increases as population size decreases which is contrary to the idea of a sustainability threshold.

-   Using empirical observations alone to set an SET implies:

    -   They will be sensitive to escapement goal lower bounds and fishery trends.

    -   They will never be identified a priori.

    -   They will be inconsistently applied.

-   Conservation objectives should trump yield objectives when necessary implying a SET could and should exceed the lower bound of an escapement goal in some scenarios.

## Spawner-Recruit Dynamics

In fisheries we typically assume compensatory population dynamics (red lines in @fig-gamma) which assume per capita production increases as population size decreases[^1]. While this assumption has been empirically observed for many stocks during periods of high spawning abundance it implies populations will grow more quickly as the stock size is depleted and therefore provides no indication that a population can be imperiled. A complementary assumption is depensatory population dynamics which assume per capita production decreases as population size decreases *at low levels of abundance*. Depensatory population dynamics have not been consistently verified with empirically information but garner consistent interest because they imply stocks will be slow to recover from low levels of spawning abundance and may not recover from extremely low levels of spawning abundance. Models that allow for depensatory dynamics include an a peak on the $\textrm{log}\left(\frac{R}{S}\right)$ scale where compensatory dynamics end and depensatory dynamics begin as spawning abundance decreases (dots in @fig-gamma) and are thus consistent with empirical observations at large abundances and precautionary when small abundances have yet to be observed. In this document we will use the term non-depensatory for models that included **only** compensatory dynamics (i.e. Ricker) and depensatory for models that include depensatory dynamics at small spawning escapements and compensatory dynamics at medium and large spawning escapements.

[^1]: i.e. the population *compensates* for a reduction in it's size by producing more recruits

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-gamma
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Spawner-recruit dynamics under non-depensatory (red line) and depensatory assumptions. Dot-dash lines represent the point where stock dynamics shift from compensatory to depensatory as spawning abundance decreases. Dash lines represent an unstabe equilibriom below which spawning abundacne trends towards zero."

#example plot
#parameter set
beta <- 0.0001
temp_par <- gamma_par(1 / beta, Ricker(1, 0.0001, 1 / beta), seq(1, 1.6, 0.3)) #c(1, 1.1, 1.6))

#depensation points
dat_dep <- 
  as.data.frame(temp_par) %>%
  filter(c != 1) %>%
  rowwise() %>%
  mutate(S = (c-1) / b,
         R = SRgamma(a, b, c, S = S),
         logRS = log(SRgamma(a, b, c, S = S) / S),
         gamma = as.character(c)) %>%
  ungroup() %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  mutate(Parameter = factor(Parameter, levels = c("R", "logRS")))

#critical values
dat_crit <- 
  as.data.frame(temp_par) %>%
  filter(c > 1.2) %>%
  rowwise() %>%
  mutate(S = uniroot(function(S) {SRgamma(a, b, c, S) - S}, c(5, 2500), tol = 0.00001)$root,
         R = SRgamma(a, b, c, S = S),
         logRS = log(SRgamma(a, b, c, S = S) / S),
         gamma = as.character(c)) %>%
  ungroup() %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  mutate(Parameter = factor(Parameter, levels = c("R", "logRS")))

pal <- scales::hue_pal()(7)

#create plot
data.frame(S = rep(seq(0, 20000, length.out = 100), times = length(temp_par[[3]])),
           alpha = rep(temp_par[[1]], each = 100),
           beta = rep(temp_par[[2]], each = 100),
           gamma = rep(temp_par[[3]], each = 100)) %>%
  mutate(R = SRgamma(alpha =  alpha, beta = beta, gamma = gamma, S),
         logRS = log(R / S)) %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  mutate(Parameter = factor(Parameter, levels = c("R", "logRS"))) %>%
  ggplot(aes(x = S, y = Value, color = as.character(gamma))) +
  geom_line() +
  geom_point(data = dat_dep) +
  geom_segment(data = dat_dep, aes(xend = S, y = -Inf, yend = Value), linetype = 4) +
  geom_segment(data = dat_crit, aes(xend = S, y = -Inf, yend = Value), linetype = 2) +
  geom_abline(aes(slope = x, intercept = y), data.frame(x = c(1, 0), y = c(0, 0), Parameter = factor(c("R", "logRS"), levels = c("R", "logRS")))) +
  scale_x_continuous(breaks = seq(0, 20000, 2500)) +
  scale_color_manual(name = "Gamma (\u03B3)",
                     labels = c("1 (Ricker)", "1.3", "1.6"),
                     values = pal) +
  theme_bw() +
  facet_grid(Parameter ~ ., scales = "free_y")
```

The spawner-recruit curves shown in @fig-gamma include both compensatory and depensatory dynamics and are described mathematically as the gamma spawner-recruit relationship:

$$R~=~\alpha S^\gamma e^{(-\beta S)}$$

The $\alpha$ parameter describes stock productivity while the $\beta$ and $\gamma$ parameters describe the strength of compensatory and depensatory density-dependence, respectively. The Ricker spawner-recruit relationship is a special case of the gamma spawner-recruit relationship when $\gamma = 1$ . Notice the relationships shown in @fig-gamma have been adjusted so that they all have same values for $S_{max}$ and $R_{max}$[^2] and can thus be viewed as modifications of a Ricker curve for a single population with increasingly strong levels of depensatory dynamics.

[^2]: Which can be done by algebraic manipulation of $\alpha$ and $\beta$.

When viewed on the scale of log recruits per spawner the depensatory dynamics in the gamma spawner-recruit relationship become obvious @fig-gamma. In this document we will explore using the peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve as an approximation for the SET. The peak of the curve can be found using calculus and the equation:

$$\text{log}\left(\frac{R}{S}\right)~=~\textrm{log}(\alpha)+(\gamma - 1)\text{log}(S)\ -\beta S$$

and is located at $\frac{(\gamma-1)}{\beta}$. @fig-setlb1 shows the relationship between the peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve and the the lower bound of possible escapement goals for a single stock with varied levels of depensatory dynamics. Notice that when depensatory dynamics are included in the spawner-recruit model the range of escapements that provide x% of MSY narrows and shifts towards higher escapements. Since ADF&G currently assumes non-depensatory dynamics for all salmon stocks we should expect to increase escapement goal bounds if depensatory dynamics are assumed while estimating an SET. Also note that while proposed SETs are smaller than the lower bound of escapement goals that provide 90% of MSY at the lower bound, proposed SETs can exceed the lower bound of escapement goals that provide only 50% of MSY[^3] at the lower bound when depensatory dynamics are strong.

[^3]: Fifty percent of MSY is intended to represent an extreme example only rarely used in Alaskan salmon fisheries. For example, the current Egegik River SEG of 800,000-1,400,000 fish provides approximately 48% (3,900,000 fish) of MSY (8,100,000 fish) at the lower bound using the larger prior assumption for equilibrium stock size (Cunningham et al. 2015b Evaluation of alternative methods to estimate biological escapement goals, Table 4 and Figure 4).

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-setlb1
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The **theoretical** relationship between the range of escapements providing x% of MSY and the  SET (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory as spawning abundance decreases) for a single stock with 3 levels of depensatory spawner-recruit dynmics \u03B3."
SET_point <-
  expand.grid(lnalpha = c(1, 1.5, 2),
              beta = c(0.001, 0.0001, 0.00001, 0.000001),
              sigma = c(0.25, 0.5, 0.75),
              gamma = seq(1, 1.6, 0.1),
              pct_MSY = c(0.5, 0.6, 0.7, 0.8, 0.9)) %>%
  mutate(Smsy_Ricker = get_Smsy(lnalpha, beta),
         Smax = 1 / beta,
         Rmax = Ricker(lnalpha, beta, Smax),
         a = gamma_par(Smax, Rmax, gamma)[[1]],
         b = gamma_par(Smax, Rmax, gamma)[[2]],
         set = (gamma - 1) / b) %>%
  rowwise() %>%
  mutate(lb_Ricker = optimise(f = get_bounds, #'true' OYP bounds
                              interval = 1:Smsy_Ricker,
                              lnalpha = lnalpha,
                              beta = beta,
                              pct_MSY = pct_MSY,
                              correct = FALSE)$minimum,
         ub_Ricker = optimise(f = get_bounds, #'true' OYP bounds
                              interval = Smsy_Ricker:(Smsy_Ricker*3),
                              lnalpha = lnalpha,
                              beta = beta,
                              pct_MSY = 0.7,
                              correct = FALSE)$minimum,
         Smsy_gamma =   
           optimize(
             function(a, b, g, x){
               SRgamma(alpha = a, beta = b, gamma = g, S = x) - x
             },
             interval = c(0, 4 * 1 / beta),
             maximum = TRUE,
             a = a,
             b = b,
             g = gamma)$maximum,
         MSY_gamma = SRgamma(alpha = a, beta = b, gamma = gamma, S = Smsy_gamma) - Smsy_gamma) %>%
  mutate(lb_gamma = 
           optimize(
             function(a, b, g, pct_MSY, MSY_gamma, x){
               ((SRgamma(alpha = a, beta = b, gamma = g, S = x) - x) - pct_MSY * MSY_gamma)^2
             },
             interval = c(Smsy_gamma / 10, Smsy_gamma),
             a = a,
             b = b,
             g = gamma,
             pct_MSY = pct_MSY,
             MSY = MSY_gamma)$minimum,
         ub_gamma = 
           optimize(
             function(a, b, g, pct_MSY, MSY_gamma, x){
               ((SRgamma(alpha = a, beta = b, gamma = g, S = x) - x) - pct_MSY * MSY_gamma)^2
             },
             interval = c(Smsy_gamma, Smsy_gamma * 3),
             a = a,
             b = b,
             g = gamma,
             pct_MSY = 0.7,
             MSY = MSY_gamma)$minimum)

SET_point %>%
  filter(pct_MSY %in% c(0.5, 0.9),
         gamma %in% c(1, 1.3, 1.6),
         lnalpha == 1.5,
         beta == 0.0001,
         sigma == 0.25) %>%
  mutate(curves = list(data.frame(S = rep(seq(0, 15000, 100), times = 3),
                                  R = SRgamma(a, b, gamma, rep(seq(0, 15000, 100), times = 3))))) %>% 
  unnest(curves) %>%
  ggplot(aes(x = S, y = R)) +
  geom_line() +
  geom_rect(aes(xmin = lb_gamma, xmax = ub_gamma, ymin = -Inf, ymax = Inf), alpha = 0.005, fill = "green") +
  geom_vline(aes(xintercept = set), color = "red", linetype = 2) +
  geom_abline(aes(intercept = 0, slope = 1))+
  facet_grid(paste0("\u03B3: ", ifelse(gamma == 1, "1 (Ricker)", gamma)) ~ paste0("%MSY @ lb: ", pct_MSY))
```

To obtain a more comprehensive look at the relationship between the proposed SET and the lower bound of the escapement goal we have to consider variability in stock productivity (@fig-setlb2). Notice that there are 2 significant mitigating factors for situations when the proposed SET exceeds the lower bound of the escapement goal:

1.  If we are estimating an SET as proposed herein we would also be assuming a different underlying spawner-recruit relationship and should modify the goal range to be consistent with the new relationship. In general, switching the assumed spawner-recruit relationship from a non-depensatory relationship (dashed lines in @fig-setlb2) to a depensatory relationship (solid lines in @fig-setlb2) when estimating the escapement goal range will increase both bounds of the goal and decrease instances where the SET exceeds the lower bound of the goal.

2.  Cases where the lower bound of the escapement goal remain below the proposed SET after adjusting the goals to account for depensatory spawner-recruit dynamics represent situations where the department is fishing very aggressively on either a low productivity stock and/or on a stock with strong depensatory dynamics... combinations which is likely very rare. It's more likely that when the department has chosen to fish aggressively the stock is either highly productive, depensatory behavior is moderate (small and medium $\gamma$), or both.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-setlb2
#| fig.height: 4
#| fig.width: 8
#| fig.cap: "The **theoretical** relationship between the SET (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory as spawning abundance decreases) and the lower bound of the escapement goal as a function of productivity \u03B1, strength of depensatory dynamics \u03B3 and 5 yield objectives at the lower bound of the escapement goal."
SET_point %>%
  mutate(pct_lbRicker = set / lb_Ricker,
         pct_lbgamma = set / lb_gamma) %>%
  pivot_longer(cols = c("pct_lbRicker", "pct_lbgamma"), 
               names_to = "Reference", 
               values_to = "Percentage") %>%
  ggplot(aes(x = gamma, y = Percentage, color = as.character(lnalpha), linetype = Reference)) +
    geom_line() +
    geom_hline(aes(yintercept = 1)) +
    scale_x_continuous(breaks = c(1, 1.3, 1.6)) +
    scale_y_continuous(name = "SET / EG lower bound") +
    scale_color_discrete(name = "ln(\u03B1)") +
    scale_linetype_manual(name = "Goal Reference",
                          labels = c("gamma SR", "Ricker SR"), 
                          values = c(1,2)) +
    facet_grid(. ~ paste0("%MSY @ lb: ", pct_MSY)) #beta makes no difference
```

## Simulation Framework

The simulation framework for this project was designed to approximate the circumstances staff will face when adapting ADF&G stock assessments to include estimation of an SET. Firstly, we recognize the assumption of non-depensatory spawner-recruit dynamics currently used in salmon management. To ensure our simulation framework is robust to this initial condition we started by identifying a suite of Ricker (non-depensatory) spawner-recruit and fishery parameter combinations that span the range of values observed in Alaskan fisheries. We then developed depensatory dynamic equations which are similar, with respect to maximum recruitment and the spawning escapement associated with maximum recruitment, to the non-depensatory scenarios identified. This process allowed us to produce simulated datasets that match both our current assumptions (non-depensatory spawner-recruit dynamics) as well as the depensatory dynamics that are possible given the lack of empirical data which confirm these dynamics.

Simulations were also conducted under the assumption that the data available was produced by a stock nearing consideration as a stock of concern. In practice, this means the stock had either been failing to meet the escapement goal or had met the escapement goal with negligible harvestable surplus. Thus, we explicitly included a reduced productivity regime in the last 60% of each simulated dataset and only attempted to estimate an SET when the simulated **total run size**[^4] had failed to exceed the lower bound of the escapement goal in 4 of the last 5 years.

[^4]: Note that this SOC listing criteria is consistent with the SOC SSFP review team's recommendation but inconsistent with current policy (which may list sooner if harvest results in escapements below the lower end of the goal range when run size was sufficient to exceed lower end of the goal range.

### Parameter Space for Salmon Populations

In an effort to represent a wide variety of species and populations, simulations will be performed across a grid of spawner-recruit parameters. Non-depensatory dynamics are described by Ricker curves where the parameter space includes productivity $\textrm{log}(\alpha)$ of either $1$, $1.5$ and $2$ with process error $\sigma$ of either $0.25$ or $0.5$ (@tbl-scenarios) resulting in 6 different scenarios of non-depensatory spawner-recruit dynamics. All simulations assume compensatory density-dependence of $\beta=0.0001$.

In addition, we derived 2 depensatory scenarios ($\gamma = 1.3$ or $1.6$) from each non-depensatory scenario ($\gamma = 1$) while adjusting the values for $\textrm{log}(\alpha)$ and $\beta$ when $\gamma > 1$ such that $R_{max}$ and $S_{max}$ of the spawner-recruit relationship when $\gamma > 1$ is equal to the values of $R_{max}$ and $S_{max}$ when $\gamma = 1$. Thus we considered 18 total scenarios of spawner-recruit dynamics. For simplicity, we use productivity ($\textrm{log}(\alpha) = 1$, $1.5$, or $2$) from the non-depensatory scenarios to refer to depensatory scenarios which share the same values of $R_{max}$ and $S_{max}$ even though the values of $\textrm{log}(\alpha)$ and $\beta$ used to generate the simulated datasets change for the depensatory cases.

Escapement goals for each stock were derived from the known non-depensatory spawner-recruit relationship associated with each level of productivity ($\textrm{log}(\alpha) = 1$, $1.5$, or $2$). This process mimics actual ADF&G fisheries management in that escapement goals have been set assuming a non-depensatory spawner-recruit relationships and any empirical data we collect will be relative the those goals. In addition, 2 values were used for the percentage of MSY staff were targeting at the lower bound of the escapement goal: 50% representing an extremely aggressive fishery and 90% representing a conservative fishery. This resulted in a total of 36 scenarios of spawner-recruit dynamics and fishery characteristics. All simulations used upper escapement goal bounds that were selected to achieve 70% of MSY based on the non-depensatory spawner-recruit relationship.

Finally, all simulated datasets assumed age-at-maturity for each brood year of $10\%~3$ years old, $38\%~4$ years old, $30\%~5$ years old, $20\%~6$ years old, and $2\%~7$ years old and included process $\sigma_F$ and observation $\sigma_N$ error or 0.2. Fishing power was a function of the productivity of the population and set to $30\%$, $55\%$ and $80\%$ for stocks with non-depensatory productivity of $1$, $1.5$ and $2$ respectively.

The simulation model used for this exercise is described in @sec-sim_model. The general strategy was to simulate 50 replicate datasets for each of the 36 combinations of spawner-recruit parameters and fishery characteristics. Each simulated dataset was 60 years long.

```{r}
#| echo: FALSE
#| label: tbl-scenarios 
#| tbl-cap: "Spawner-recruit and fishery parameter combinations used in this simulation study."
rep_scenarios_gp %>%
  group_by(scenario) %>%
  filter(rep == min(rep)) %>%
  select(scenario, lnalpha_1, sigma, gamma, pct_MSY) %>%
  arrange(lnalpha_1, sigma, gamma, pct_MSY) %>%
  mutate(Rmax = round(exp(lnalpha_1)/beta*exp(-1), 0),
         Smax = 1/ beta) %>%
  flextable() %>%
  set_header_labels(
    scenario = "Scenario",
    lnalpha_1 = "ln(\u03b1)",
    sigma = "\u03c3",
    gamma = "\u03b3",
    pct_MSY = "MSY % @ EG \n lower bound",
    Rmax = "Rmax",
    Smax = "Smax"
  ) %>%
  merge_v(j = c("lnalpha_1", "sigma", "gamma")) %>%
  valign(j = c("lnalpha_1", "sigma", "gamma", "pct_MSY"), valign = "top") %>%
  autofit()
```

### Productivity Regimes {#sec-productivity-regimes}

When a salmon stock consistently misses the lower bound of it's escapement goal in a well-managed fishery, marine productivity has undergone a large decline. For this exercise we assumed the first 40% (20 years) of each simulated dataset occurred under the productivity assumptions described above while for the second 60% (30 years) the the data was generated assuming sharply reduced productivity. Specifically, during the last 20 years for each simulated dataset the $\beta$ parameter was held constant while productivity was lowered[^5] such that $\textrm{log}(\alpha^*)=\frac{lb}{\beta}$ where $lb$ is the lower bound of the escapement goal[^6]. The assumed spawner-recruit relationships for each productivity regime are shown in @fig-regime. For labeling and discussion purposes we will continue to describe parameter combinations based on historical productivity and distinguish reduced productivity simulations with the words "reduced productivity". Notice that under reduced productivity conditions there is little harvestable surplus when assuming non-depensatory spawner-recruit dynamics and the stock often fails to replace itself when assuming depensatory spawner-recruit dynamics.

[^5]: For the non-depensatory model, this adjustment moves the escapement associated with equilibrium abundance $S_{eq}$ to be equal to the lower bound of the escapement goal while leaving the escapement associated the maximum recruitment $S_{max}$ unchanged.

[^6]: Recall that when $\gamma > 1$, $\alpha$ and $\beta$ are adjusted such that $S_{max}$ and $R_{max}$ are the same for the non-depensatory ($\gamma = 1$) and the depensatory ($\gamma > 1$) cases. When calculating stock parameters under reduced productivity the adjustment to $\textrm{log}(\alpha^*)$ in the non-depensatory case was made before calculating $\alpha$ and $\beta$ parameters which equate $S_{max}$ and $R_{max}$ for the depensatory and non-depensatory cases.

```{r}
#| echo: FALSE
#| label: fig-regime
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The assumed spawner-recruit relationships used in this simulation study. Each panel shows 3 spawner-recruit relationships for both the normal and low productivity regimes. The 18 relationships thus shown represent 1/2 of the total number of scenarios considered because variability in process error manifests during data generation."
rep_scenarios_gp %>%
  group_by(scenario) %>%
  filter(rep == min(rep), sigma == 0.25) %>%
  ungroup() %>%
  select(lnalpha_1, pct_MSY, lb, ub, a_1, b, gamma, a_2) %>%
  slice(rep(1:n(), each = 101)) %>% 
  mutate(S = rep(seq(0, 2 * 1 / max(beta), by = 200), times = 18),
         R = SRgamma(alpha = a_1, beta = b, gamma = gamma, S = S),
         R_2 = SRgamma(alpha = a_2, beta = b, gamma = gamma, S = S)) %>%
  ggplot(aes(x = S, y = R, color = as.character(gamma))) +
    geom_rect(aes(xmin = lb, 
                  xmax = ub, 
                  ymin = -Inf, 
                  ymax = Inf), 
              fill = "grey95",
              inherit.aes = FALSE) +
    geom_line() +
    geom_line(aes(y = R_2), linetype = 2) +
    geom_abline() +
    scale_y_continuous(name = "R") +
    scale_color_manual(name = "Gamma (\u03B3)",
                       labels = c("1 (Ricker)", "1.3", "1.6"),
                       values = pal) +
    theme_bw() +
    facet_grid(paste0("ln(\u03B1): ", lnalpha_1) ~ paste0("%MSR @ lb: ", pct_MSY),
               scales = "free_y")
```

### Simulated Population Trends

@fig-S show the escapement time series for subset of the simulated populations in this study. Notice that escapement time series in unresponsive to the modeled change in productivity for \~ 5 years after productivity is reduced. We also see that while escapements for populations with non-depensatory dynamics are asymptotic with the lower bound of the escapement goal populations with depensatory dynamics decrease slowly under the simulation assumptions. Thus the range of simulations considered include both our traditional assumptions (non-depensatory dynamics) and behavior precautionary management should avoid[^7]. I'd argue these simulation also suggest targeting too small of a percentage of MSY is dangerous as our response (designation of an SOC and estimating of an SET) and discovery of potential depensatory dynamics under this set of assumptions is delayed until spawning abundances are already dangerously reduced.

[^7]: Future simulations should consider is adjusting the lower bound of the escapement goal to match the estimated depensatory dynamics provide relief from the gradually reducing escapements shown here.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-S
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Simulated escapements for stocks with ln(\u03B1) = 1.5 and \u03B3 = 0.5. Light grey lines show the simulated escapement for each replicate simulation while the thick black line shows the median escapement. Strait lines show reference points associated with each group of simulations: the vertical black line is the timing of the regime change, the solid red line is the lower bound of the escapement goal and the dashed red line is the theoretical SET."
rep_scenarios_gp %>%
  filter(lnalpha_1 == 1.5, sigma == 0.5, pct_lb == 1) %>%
  mutate(sim = map(data, function(x) x$sim),
         S = map(data, function(x) x$S)) %>%
  unnest(c(sim, S)) %>%
  group_by(scenario, sim, lnalpha_1, lnalpha_2, a_1, a_2, b, gamma, sigma, pct_MSY, pct_lb, lb) %>%
  mutate(SET = (gamma - 1) / b) %>%
  ggplot(aes(x = sim, y = S,  group = rep)) +
  geom_line(color = "gray90") +
  stat_summary(aes(x = sim, y = S), inherit.aes = FALSE, fun = median, geom = "line", linewidth = 1) +
  geom_hline(aes(yintercept = lb), color = "red") +
  geom_hline(aes(yintercept = SET), linetype = 2, color = "red") + 
  geom_vline(aes(xintercept = 20)) +
  labs(x = "Simulation Year", y = "Escapement") +
  theme_bw() +
  facet_grid(paste0("\u03B3: ", gamma) ~ paste0("%MSY @ lb: ", pct_MSY))
```

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-SOC
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Timing of stock of concern findings for each simulated population in this study."
rep_scenarios_gp %>%
  ggplot(aes(x = yr_SOC,
             pattern = as.character(sigma),
             fill = as.character(lnalpha_1))) +
  geom_bar_pattern(color = "black", 
                   pattern_fill = "black",
                   pattern_angle = 45,
                   pattern_density = 0.1,
                   pattern_spacing = 0.025,
                   pattern_key_scale_factor = 0.6) +
  scale_pattern_manual(values = c('0.25' = "stripe", '0.5' = "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none"))) +
  labs(x = "Year of Stock of Concern Designation",
       y = "Number of Simulations",
       fill = paste0("log(\u03B1)"),
       pattern = "\u03B4") +
  facet_grid(paste0("\u03B3: ", gamma) ~ paste0("%MSY @ lb: ", pct_MSY))

```

## Analysis model

### Motivation

The model used to analyze the simulated data herein is motivated by the assertion that when empirical observations from an exploited stock contains multiple productivity regimes the spawner-recruit relationship cannot be estimated without accounting for the productivity regimes in the assessment. To see this imagine an exploited population with the following parameters:

-   years: 900

-   $ln(\alpha)$: 1.75, 1.5, 1.25, 1. 0.75, 0.375 (150 years each)

-   $\beta$: 0.0001

-   $\sigma$: 0.5

-   \% of MSY \@ lower bound: 90%

-   \% of MSY \@ upper bound: 70%

-   maximum fishing power: 60%

-   $\sigma_{F} = \sigma_{N} = 0$

```{r}
#| echo: FALSE 
#| warning: FALSE 
#| label: fig-motivate1 
#| fig.height: 6
#| fig.width: 8 
#| fig.cap: "Nine hundred years of spawner-recruit data for an exploited population experiencing 6 productivity regimes. Colored lines show the simulation model for each level of productivity while colored points show the data generated from each model." 
# motivation
# Simulate a dataset with time varying productivity to demonstrate 
# connection between S and our inability to estimate certain parameters.
# Also demonstrate how a depensatory pattern can arise from non-depensatory dynamics
# when time varying productivity is present.
  
sim_tv <- 
  sim_Ricker(c(rep(1.75, 150), rep(1.5, 150), rep(1.25, 150), rep(1, 150), rep(0.75, 150), rep(0.375, 150)),
             0.0001,
             sigW = 0.25,
             phi = 0,
             age0 = c('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02),
             Sims0 = 900,
             Hfun = H_goal,
             lb_goal = 3893,
             ub_goal = 10529,
             power = 0.6,
             sigF = 0,
             sigN = 0) %>%
  mutate(lnRS = log(R/S))
#plot the data and the data generating model
colors <- scales::hue_pal()(6)
plot_simtv <- 
  sim_tv %>% 
  ggplot(aes(x = S, y = lnRS, color = as.character(lnalpha))) + 
  geom_point() +
  stat_function(fun = function(x) log(Ricker(1.75, 0.0001, x) / x),
                linewidth = 1.25,
                color = colors[6]) +
  stat_function(fun = function(x) log(Ricker(1.5, 0.0001, x) / x),
                linewidth = 1.25,
                color = colors[5]) +
  stat_function(fun = function(x) log(Ricker(1.25, 0.0001, x) / x),
                linewidth = 1.25,
                color = colors[4]) +
  stat_function(fun = function(x) log(Ricker(1, 0.0001, x) / x),
                linewidth = 1.25,
                color = colors[3]) +
  stat_function(fun = function(x) log(Ricker(0.75, 0.0001, x) / x),
                linewidth = 1.25,
                color = colors[2]) +
  stat_function(fun = function(x) log(Ricker(0.375, 0.0001, x) / x),
                linewidth = 1.25,
                color = colors[1]) +
  scale_color_discrete(name = "ln(\u03B1)",
                       breaks = c(1.75, 1.5, 1.25, 1, 0.75, 0.375)) +
  theme_bw() +
  annotate("rect", xmin = 3893, xmax = 10529, ymin = -Inf, ymax = Inf, fill = 'gray', alpha = .4)
plot_simtv
```

For most productivity regimes fishery management is effective at distributing escapements throughout the escapement goal range @fig-motivate1. That said, notice that empirical observations outside of the escapement goal range are skewed heavily towards the most extreme productivity regimes in the dataset and respond differently to fishery management practices at the lower and upper bounds of the escapement goal range. Few points exceed the upper boundary when productivity is at a high extreme because we have the management capability (capped at the power of the fishery) to reduce large run sizes. When productivity is at the low extreme we lack fishery management options to increase the run size and data points below the lower boundary fall essentially at random. This observation suggests our ability to observe compensatory and depensatory spawner-recruit dynamics is a function of the productivity regime from which we are observing and that we should not expect reliable estimation of both spawner-recruit dynamic patterns from a single production regime.

```{r}
#| echo: FALSE 
#| warning: FALSE
#| message: FALSE 
#| label: fig-motivate2 
#| fig.height: 6
#| fig.width: 8 
#| fig.cap: "Nine hundred years of spawner-recruit data for an exploited population experiencing time-varying productivity. Colored lines show the simulation model for each level of productivity while colored points show the data generated from each model. The dashed line shows a locally smoothed line through the entire dataset and the solid black lines show locally smoothed lines through data generated by the 3 largest and 3 smallest productivity regimes." 

# Smooth through all of the data
# Temporal varibility destroy our ability to estimate beta.
# You could argue we are seeing depensation but it's masked by lack of compensation.
# if we smooth through the most and least productive halves of the data we can 
# estimate compensation and depensation. Notice depensation is not intrinsic to the stock 
# but is an artifact of our observation process. I'm arguing this does not matter
# wrt management.
plot_simtv +
  stat_smooth(aes(x = S, y = lnRS),
              se = FALSE,
              inherit.aes = FALSE, 
              color = "black",
              linetype = 2) +
  stat_smooth(data = sim_tv[sim_tv$lnalpha >= 1.25, ], 
              aes(x = S, y = lnRS),
              se = FALSE,
              inherit.aes = FALSE, 
              color = "black") +
  stat_smooth(data = sim_tv[sim_tv$lnalpha < 1.25, ],
              aes(x = S, y = lnRS),
              se = FALSE,
              inherit.aes = FALSE, 
              color = "black")
```

To see this note that a locally smoothed line through the entire data set fails to capture compensatory dynamics (i.e. positive slope) but that this failure is partially corrected by assuming a high and low productivity regimes[^8] before producing the smoothed line (@fig-motivate2). The smoothed line for the low productivity regime also captures depensatory dynamics which are emergent in the sense that we did not include depensatory dynamics in the simulation model but still observe them when multiple productivity regimes are included in the dataset. Thus empirically observed depensatory spawner-recruit dynamics can result from 2 mechanisms: 1) a depensatory model with modest time-varying productivity and, 2) a non-depensatory model with significant time-varying productivity. The second situation is likely rife in real datasets and suggests by assuming depensatory spawner-recruit dynamics ADF&G can provide useful management advice when observing low spawning escapements without definitive information about the data generating mechanism. This practice would be **precautionary** because it will prevent us from waiting to collect a high risk data set before mitigating against it and **responsive** because the estimation routine will account for the evidence for depensatory dynamics provided by the data.

[^8]: With respect to the smooth lines in @fig-motivate2 high productivity means data generated from the spawner-recruit relationships where $\textrm{log}(\alpha)$ was $1.75$, $1.5$ or $1.25$ while low productivity means data generated from the spawner-recruit relationships where $\textrm{log}(\alpha)$ was $1$, $0.75$ or $0.375$.

Lastly, the locally smoothed lines in @fig-motivate2 suggest that making deliberate choices about the spawner-recruit dynamics included in the estimation model based on concurrent productivity regimes would represent a **best practice** because it isolates yield-based management decisions, which are responsive to compensatory spawner-recruit dynamics, from conservation-based management decisions, which are responsive to depensatory spawner-recruit dynamics.

### Model Description

The model assumes stock dynamics are governed by a gamma spawner-recruit equation that describes, relative to brood year $c$, the number of fish expected to return $R_c$ given the number of fish in the spawning escapement $S_c$. We model this relationship as per capita production $\frac{R_c}{S_c}$ on the logarithmic scale:

$$ \textrm{log}\left (\frac{R_c}{S_c}\right )~=~\textrm{log}(\alpha_r)~+~(\gamma_r-1) S_{c}~-~\beta_r S_{c} $$

where $\alpha_r$ is a measure of productivity, $\beta_r$ is a measure of compensatory density dependence, $\gamma_r$ is a measure of depensatory density dependence and $r$ is an index which indicates regime affiliation. The peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve is an estimate of the SET and located at $\frac{\gamma_2 - 1}{\beta_2}$.

It's unlikely we would be discussing an SET if the stock was not in a period of reduced productivity. We explicitly include 2 productivity regimes where $y_c$ is the brood year cutoff between the high and low productivity regimes and the index $r$ is set equal to $\lambda_c = I(c - y_c)$ which is an indicator variable equal to 1 when $c - y_c$ is positive and 2 when $c-y_c$ is negative. Within each regime, productivity varies among brood years, fluctuating around a central tendency. Time-varying productivity often manifests as serially correlated model residuals, so a lognormal error term with a lag of 1 year was included in the linearized form of the S-R relationship to represent realized recruitment.

$$  \textrm{log}\left (\frac{R_c}{S_c}\right )~=~\textrm{log}(\alpha_r)~+~(\gamma_r-1) S_{c}~-~\beta_r S_{c} +\phi \nu_{(c-1)}+\epsilon_{W} $$

where $\phi$ is the lag-1 serial correlation coefficient, $\nu_{c}$ are model residuals defined as

$$ \nu_{c}~=~\textrm{log}\left (\frac{R_c}{S_c}\right )~-~[ \textrm{log}(\alpha_r)~+~(\gamma_r-1) S_{c}~-~\beta_r S_{c}]$$

and the $\epsilon_{W}$ are independently and normally distributed process errors with "white noise" variance $\sigma^2_{W}$.

Prior distributions for this model were set to enforce an order to regime affiliation (1 = high productivity, 2 = low productivity) and minimize the estimation burden relative the the likely information available from each regime. The prior distributions for the productivity parameter during the high productivity regime were set on the log scale where $\textrm{log}(\alpha_1)\sim\textrm{uniform}(-4, 4)$. The productivity parameter during the low productivity regime $\textrm{log}(\alpha_2)$ was estimated based on the algebraic relations between it and other estimated parameters:

$$ \textrm{log}(\alpha_2) = scale - \gamma_2~*~\left(\textrm{log}\left(\frac{1}{\beta_1}\right)~-~1\right) $$

where $scale = \textrm{log}\left(Rmax_{2}\right) \sim \textrm{uniform}(1,15)$. The prior distribution for the compensatory density-dependent parameter during the high productivity regime was $\beta_1\sim\textrm{half-normal}(0, 1)$ while during the low productivity regime compensatory density dependence was estimated using the algebraic relationship between it and other estimated parameters $\beta_{2}~=~ \beta_{1}\gamma_2$. Non-depensatory density-dependence was assumed during the high productivity regime $\gamma_1=1$ while during the low productivity regime the prior distribution was uniform with a constrained support $\gamma_2\sim\textrm{uniform}(1, 2)$. The prior distribution for the regime cutoff was $y_d\sim\textrm{uniform}(10,30)$.

## Results {#sec-results}

```{r}
#| echo: FALSE
#| warning: FALSE
plot_fit <- function(scenario_file, ...){
  filters <- enquos(...)
  
  data0 <- 
    scenario_file %>%
    filter(!!!filters)
  
  rep_var = sample(unique(data0$rep), 1, replace = FALSE)
  
  data <- 
    data0 %>%
    filter(rep == rep_var)
  
  maxS <- round(max(data$data_jags[[1]]$S), -2)
  
  true <- 
    data %>%
    select(scenario, rep, a_1, a_2, b, gamma, lb, ub) %>%
    mutate(set = (gamma - 1)/ b)
  
  estimates <- 
    data %>%
    select(scenario, rep, mod_gamma) %>%
    mutate(a_1 = map_dbl(mod_gamma, ~exp(.$q50$lnalpha[1])),
           a_2 = map_dbl(mod_gamma, ~exp(.$q50$lnalpha[2])),
           b_1 = map_dbl(mod_gamma, ~.$q50$beta[1]),
           b_2 = map_dbl(mod_gamma, ~.$q50$beta[2]),
           gamma_1 = map_dbl(mod_gamma, ~.$q50$gamma[1]),
           gamma_2 = map_dbl(mod_gamma, ~.$q50$gamma[2]),
           set = (gamma_2 - 1) / b_2)
  
  plot1 <- 
    data %>%
    mutate(lnRS = map(data_jags, function(x) data.frame(year = 1:x$nyrs, lnRS = x$lnRS, S = x$S)),
           cut = map_dbl(mod_gamma, ~.$q50$y_d)) %>%
    select(scenario, rep, a_1, a_2, b, gamma, lb, ub, cut, lnRS) %>%
    unnest(lnRS) %>%
    mutate(regime = ifelse(year <= cut, "normal", "reduced")) %>%
    ggplot(aes(x = S, y = lnRS)) +
    geom_point(aes(color = regime)) +
    geom_vline(data = true, aes(xintercept = set), color = "red") +
    geom_vline(data = estimates, aes(xintercept = set), linetype = 2, color = "red") +
    geom_rect(data = true, aes(xmin = lb, xmax = ub, ymin = -Inf, ymax = Inf),
              inherit.aes = FALSE, 
              alpha= .25) +
    geom_function(fun = function(x) log(SRgamma(true$a_1, true$b, true$gamma, x) / x) ,
                  color = "black") +
    geom_function(fun = function(x) log(SRgamma(true$a_2, true$b, true$gamma, x) / x),
                  color = "red") +
    geom_function(fun = function(x) log(SRgamma(estimates$a_1, estimates$b_1, estimates$gamma_1, x) / x),
                  color = "black",
                  linetype = 2) +
    geom_function(fun = function(x) log(SRgamma(estimates$a_2, estimates$b_2, estimates$gamma_2, x) / x),
                  col = "red",
                  linetype = 2) +
    scale_color_manual(values = c("black", "red")) +
    scale_x_continuous(limits = c(0, 1.1 * maxS)) +
    theme_bw()
  
  plot2 <- 
    data %>%
    mutate(S = map(data_jags, function(x) data.frame(year = 1:x$nyrs, S = x$S)),
           cut = map_dbl(mod_gamma, ~.$q50$y_d)) %>%
    unnest(S) %>%
    mutate(regime = ifelse(year <= cut, "normal", "reduced")) %>%
    select(scenario, rep, year, b, gamma, lb, regime, S) %>% 
    mutate(set = (gamma - 1)/ b) %>% 
    ggplot(aes(x = year, y = S)) + 
    geom_line() +
    geom_point(aes(color = regime)) +
    geom_hline(data = true, aes(yintercept = set), color = "red") +
    geom_hline(data = estimates, aes(yintercept = set), linetype = 2, color = "red") +
    geom_rect(data = true, aes(ymin = lb, ymax = ub, xmin = -Inf, xmax = Inf),
              inherit.aes = FALSE, 
              alpha= .25) +
    scale_color_manual(values = c("black", "red")) +
    scale_y_continuous(limits = c(0, 1.1 * maxS)) +
    theme_bw() +
    labs(caption = paste0(data$scenario, ", ", data$rep))
  
  ggarrange(plot1, plot2, nrow = 2, heights = c(6,4))
}
```

### Analysis examples (depensatory dynamics present)

Three examples of simulated datasets and resultant estimates when $ln(\alpha) = 1.5$, $\sigma = 0.5$, $\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$ are presented in this section to give the reader an idea of the variability associated with estimating an SET. The reader can also use these plots to gauge whether a SOC review or listing would have been likely given the associated escapement time series. @fig-median1.3 shows a randomly selected dataset with a estimated SET that was between the 40th and 60th percentile of all 50 estimates and demonstrates that this procedure provides a reasonable approximation of the SET implied by the spawner-recruit assumptions.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-median1.3
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the 10 datasets that resulted in an SET estimate **between the 40th and 60th percentiles** of the 50 SETs estimated for this parameter combination. The simulated and estimated SET's are shown as vertical lines in the top panel and horizontal lines in the bottom panel."
rep_scenarios_gp %>%
  filter(set_est > set_estq40 & set_est < set_estq60) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1.3,
           pct_MSY == 0.9)
```

@fig-low1.3 shows a randomly selected dataset with a estimated SET that was in the lowest 10% of all 50 estimates and demonstrates the estimation routine's response to poor evidence for depensatory dynamics (even when they exists).

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-low1.3
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the 5 datasets that resulted in the **lowest 10%** of the 50 SETs estimated for this parameter combination. The simulated and estimated SET's are shown as vertical lines in the top panel and horizontal lines in the bottom panel."
rep_scenarios_gp %>%
  filter(set_est < set_estq10) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1.3,
           pct_MSY == 0.9)
```

@fig-high1.3 shows a randomly selected dataset with a estimated SET that was in the highest 10% of all 50 estimates and demonstrates the estimation routine's response to either large evidence for depensatory dynamics or poor information about density dependence (which drive the SET estimate towards higher escapements artificially).

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-high1.3
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the 5 datasets that resulted in the **highest 10 %** of the 50 SETs estimated for this parameter combination. The simulated and estimated SET's are shown as vertical lines in the top panel and horizontal lines in the bottom panel."
rep_scenarios_gp %>%
  filter(set_est > set_estq90) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1.3,
           pct_MSY == 0.9)
```

### Synthesis

One way to view these results is to look at the distribution of median SET estimates for all 50 replicate datasets associated with each spawner-recruit scenario in @fig-set. The facet labels can be cross referenced with @tbl-scenarios to identify the data generating model for each panel but one hint regarding the layout is that the first two columns represent data generated with a non-depensatory model, the next two columns represent data generated with $\gamma = 1.3$, and the last two columns represent data generated with $\gamma = 1.6$. I'd suggest the SET was estimated with resonable fidelity in both the of the cases where depensatory dynamics were used to generate the data. When a non-depensatory model was used to generate the data that the estimation procedure assumes some model-based depensatory dynamics to estimate a SET which is greater than 0 but generally smaller than those estimated when depensatory dynamics were included in the simulation model.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-set
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The distribution of median SET estimates (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory) for 50 datasets generated for each spawner-recruit scenario. The vertical black line shows the SET estimate based on the simulation model while the numbers above each panel refer to the spawner-recruit and fishery parameter combinations used in this simulation study @tbl-scenarios."
rep_scenarios_gp %>%
  select(scenario, rep, lnalpha_1, lnalpha_2, beta, sigma, gamma, a_1, a_2, b, pct_lb, pct_MSY, lb, set_est) %>%
  mutate(set = (gamma - 1) / b) %>%
  ggplot(aes(x = as.character(sigma), y = set_est, color = as.character(lnalpha_1), group = scenario)) +
  geom_boxplot() +
  geom_hline(aes(yintercept = set)) +
  #geom_point(aes(y = lb), shape = 8, color = "red") +
  labs(color = "log(\u03B1)", 
       x = paste0("Process error (\u03B4)"),
       y = "Median SET estimate") +
  facet_grid(paste0("\u03B3: ", gamma) ~ 
               paste0("% of MSY: ", pct_MSY), scales = "free_x")
```

Another way to view these results is to look at the distribution of SET estimates relative to the lower bound of the escapement goal that was assumed while the data was generated (@fig-set_lb). In most cases when depensatory dynamics were included in the data generating model the estimation routine was able to approximate the relationship between the SET and the lower bound of the escapement goal assumed by the simulation model.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-set_lb
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The **empirical and theoretical** relationship between the SET (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory) and the lower bound of the escapement goal for 3 values of \u03b1 and \u03B3 and 2 yield objectives at the lower bound of the escapement goal. The box plots show the empirical distribution of the SET estimates for \u03c3=0.25 and \u03c3=0.5, respectively, while the lines show the theoretical value assumed by the data generating mechanism if the escapement goal was (solid lines) or was not (dotted lines) adjusted after depensatory SR dynamics were indicated." 
# test <- 
#   SET_point %>%
#   filter(beta == 0.0001,
#          sigma == 0.5,
#          pct_MSY %in% c( 0.5, 0.9),
#          gamma %in% c(1, 1.3, 1.6)) %>%
#   rename(pct_lb = pct_MSY) %>%
#   mutate(scenario = 1) %>%
#   mutate(set_lbRicker = SET / lb_Ricker,
#          set_lbgamma = SET / lb_gamma) 
# 
# rep_scenarios_gp %>%
#   select(scenario, rep, lnalpha, lnalpha_red, beta, sigma, gamma, a, a_red, b, pct_lb, lb_pctMSY, mod_gamma) %>%
#   mutate(set_lb = map_dbl(mod_gamma, function(x) (x$q50$gamma[2] - 1) / x$q50$beta[2]) / lb_pctMSY) %>%
#   ggplot(aes(x = gamma, y = set_lb, group = scenario)) +
#   geom_boxplot() +
#   geom_line(data = test, 
#             aes(y = set_lbRicker, color = as.character(lnalpha)), 
#             size = 1.1, linetype = 3) +
#   geom_line(data = test, 
#             aes(y = set_lbgamma, color = as.character(lnalpha)), 
#             size = 1.1) +
#   coord_cartesian(ylim = c(0, 4.25)) +
#   scale_x_continuous(name = "Gamma (\u03B3)", breaks = c(1, 1.3, 1.6)) +
#   scale_y_continuous(name = "SET / EG lower bound") +
#   scale_color_discrete(name = "ln(\u03B1)") +
#   geom_hline(aes(yintercept = 1)) +
#   facet_grid(paste0("%MSY @ lb: ", pct_lb) ~ paste0("\u03B1: ", lnalpha))
```

### Analysis examples (depensatory dynamics absent)

Three examples of the simulated dataset and resultant estimates when $ln(\alpha) = 1.5$, $\sigma = 0.5$, $\gamma = 1$, and $pct_{MSY} @ lb = 0.9$ are presented in this section to give the reader an idea of the variability associated with estimating an SET when the data generating mechanism is non-depensatory. @fig-median1 shows a randomly selected dataset with a estimated SET that was between the 40th and 60th percentile of all 50 estimates and demonstrates that using this procedure the SET is often set much lower than the lower bound of the escapement goal.

```{r}
#| echo: FALSE 
#| warning: FALSE 
#| label: fig-median1 
#| fig.height: 6 
#| fig.width: 8 
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the 10 datasets that resulted in an SET estimate **between the 40th and 60th percentiles** of the 50 SETs estimated for this parameter combination. The simulated and estimated SET's are shown as vertical lines in the top panel and horizontal lines in the bottom panel." 
rep_scenarios_gp %>%   
  filter(set_est > set_estq40 & set_est < set_estq60) %>%   
  plot_fit(lnalpha_1 == 1.5,            
           sigma == .5,            
           gamma == 1,            
           pct_MSY == 0.9)
```

@fig-low1 shows a randomly selected dataset with a estimated SET that was one of the lowest 10% of all 50 estimates and demonstrates the estimated SET can be set quite low when there are few poorly performing spawner-recruit pairs associated with the lowest observed abundances.

```{r}
#| echo: FALSE 
#| warning: FALSE 
#| label: fig-low1 
#| fig.height: 6 
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the 5 datasets that resulted in the **lowest 10%** of the 50 SETs estimated for this parameter combination. The simulated and estimated SET's are shown as vertical lines in the top panel and horizontal lines in the bottom panel." 
rep_scenarios_gp %>%   
  filter(set_est < set_estq10) %>% 
  plot_fit(lnalpha_1 == 1.5,            
           sigma == .5,            
           gamma == 1,            
           pct_MSY == 0.9)
```

@fig-high1 shows a randomly selected dataset with a estimated SET that was one of the highest 10% of all 50 estimates and demonstrates the estimation routine is sensitive to poor estimates of density dependence which drive the SET towards higher escapements artificially.

```{r}
#| echo: FALSE 
#| warning: FALSE 
#| label: fig-high1 
#| fig.height: 6
#| fig.width: 8 
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the 5 datasets that resulted in the **highest 10 %** of the 50 SETs estimated for this parameter combination. The simulated and estimated SET's are shown as vertical lines in the top panel and horizontal lines in the bottom panel." 
rep_scenarios_gp %>%   
  filter(set_est > set_estq90) %>%   
  plot_fit(lnalpha_1 == 1.5,            
           sigma == .5,            
           gamma == 1,            
           pct_MSY == 0.9)
```

## Appendix A: Simulation Model {#sec-sim_model}

Abundance of salmon is generated by a S-R relationship that describes the number of fish expected to return (the "recruitment") from a given number of spawning fish (the "escapement"). The total expected recruitment $R_{c}$ produced from fish spawning in brood year $c$ follows the gamma formulation:

$$ R_{c}~=~\alpha_c S_{c}^\gamma e^{-\beta S_{c}} $$

where $S_{c}$ is the number of spawners, $\alpha_c$ is a measure of productivity, $\beta$ is a measure of compensatory density dependence, $\gamma$ is a measure of depensatory density dependence and $r$ is an index to indicate regime affiliation.

However, productivity varies among brood years, fluctuating around a central tendency. Time-varying productivity often manifests as serially correlated model residuals, so a lognormal error term with a lag of 1 year was included in the linearized form of the S-R relationship to represent realized recruitment.

$$ \textrm{ln}(R_{c})~=~\textrm{ln}(\alpha)+\gamma\textrm{ln}(S_{c})-\beta S_{c} +\phi \nu_{(c-1)}+\epsilon_{W} $$

where $\phi$ is the lag-1 serial correlation coefficient, $\nu_{c}$ are model residuals defined as

$$ \nu_{c}~=~\textrm{ln}(R_{c})-\textrm{ln}(\alpha)-\gamma\textrm{ln}(S_{c})+\beta S_{c} $$

and the $\epsilon_{W}$ are independently and normally distributed process errors with "white noise" variance $\sigma^2_{W}$.

Age at maturity ($p_{ca}$), is needed to distribute recruitment across calendar years and is treated as a constant within each brood year. The abundance $N_{ya}$ of age $a$ salmon in calendar year $y$ is the product of the age at maturity scalar and the total return (recruitment) $R_{c}$ for from brood year $c=y−a$:

$$ N_{ya}~=~p_{(y-a)a}R_{(y-a)} $$

Total run $N_{y}$ during calendar year $y$ is the sum of abundance at age across all ages:

$$ N_{y}~=~\sum_{a} N_{ya} $$

Instantaneous fishing mortality $F_y$ is a function of the annual harvest rate $U_y$ and used to calculate escapement $S_y$:

$$ S_{y}~=~N_ye^{-F_y} $$

Where $$F_{y}=-\textrm{log}(1-U_y)\textrm{exp}(\epsilon_F)$$ with $\epsilon_{F}~\sim~\textrm{Normal}(0, \sigma^2_{F})$.

The harvest process used in these simulations mimics standard ADF&G fisheries management, i.e. managers target a harvest rate that will result in an escapement between the lower and upper bounds of the escapement goal range. The annual harvest rate $U_{y}$, was modeled as a function of the projected total run $N_{y}^{proj.}$, both bounds of the escapement goal $lb$ and $ub$, and the power of the fishery:

$$ U_{y}~=~\textrm{f}(N_y^{proj.},~lb,~ub,~power) $$

Where $N_y^{proj.}=N_y \textrm{exp}(\epsilon_N)$ with $\epsilon_{N}~\sim~\textrm{Normal}(0, \sigma^2_{N})$. To determine annual harvest rates the following algorithm was used:

$$ U_y^{goal} = \textrm{minimum}(\textrm{Uniform}(U_{ub}, U_{lb}),~power) $$

where

$$ U_{lb} = \textrm{if}(N_Y^{proj.} > lb)~\frac{N_y^{proj.} - lb}{N_y^{proj.}}~\textrm{else}~0 $$

$$ U_{ub} = \textrm{if}(N_Y^{proj.} > ub)~\frac{N_y^{proj.} - ub}{N_y^{proj.}}~\textrm{else}~0 $$

and $power$ represent the maximum harvest rate the fishery is capable of producing. The lower bound of the escapement goal was varied across simulations but was set as the escapement that predicted a mean return which produced x% of MSY using historical productivity values while the upper bound was was the escapement that predicted a mean return which produced 70% of MSY using historical productivity values.

Simulated datasets also tracked stock escapement's relative to the lower bound of the escapement goal. Stocks were designated a stock of concern when the annual run size was less than the lower bound of the escapement goal in at least 4 of the last 5 years. Stock of concern designations were removed the annual run size exceeded the lower bound of the escapement goal in at least 4 of the last 5 years.

## Appendix B: Spawner-Recruit Analysis Jags Code {#sec-analysis_mod}

```{r}
#| echo: FALSE
lines <- readLines("..\\scripts\\gamma_RS_change_scale.txt")
gluedown::md_text(lines)
```
