---
title: "Sustainable Salmon Fisheries Policy Stock of Concern Revision Recommendations"
author: "Adam Reimer"
format:
  html:
    embed-resources: true
editor: visual
toc: TRUE
number-sections: true
---

```{r include = FALSE}
packs <- c("tidyverse", "ggforce", "RcppRoll", "knitr", "flextable", "ggpubr", "ggpattern", "DT", "zoo")
lapply(packs, require, character.only = TRUE)

# source functions
source("..\\functions\\functions.R")

rep_scenarios_gp0 <- 
  readRDS(file = "..\\rep_scenarios_seqlb_scale_SOC.rds") 
fill_row <- rep_scenarios_gp0[1,] #add in scenario 2 which was removed bc no SOC listed in sims
fill_row$scenario <- 2
fill_row$pct_lb <- 1
fill_row$data <- fill_row$yr_SOC <- fill_row$data_jags <- fill_row$mod_gamma <- fill_row$mod_Ricker <- fill_row$set_est <- fill_row$set_estq10 <- fill_row$set_estq40 <- fill_row$set_estq60 <- fill_row$set_estq90 <- NA
rep_scenarios_gp <-
  rep_scenarios_gp0 %>%
  group_by(scenario) %>%
  mutate(set_est = map_dbl(mod_gamma, function(x) (x$q50$gamma[2] - 1) / x$q50$beta[2]),
         set_estq10 = quantile(set_est, 0.1),
         set_estq40 = quantile(set_est, 0.4),
         set_estq60 = quantile(set_est, 0.6),
         set_estq90 = quantile(set_est, 0.9)) %>%
  ungroup() %>%
  rbind(fill_row) %>%
  filter(pct_lb == 1) %>% #drop Seq<lb  in regime 2 sims
  arrange(lnalpha_1, sigma, gamma, pct_MSY) %>% # renumber scenarios
  rename(scenario0 = scenario) %>%
  mutate(scenario = cumsum(c(1, as.numeric(diff(scenario0)) != 0))) %>%
  select(names(rep_scenarios_gp0), starts_with("set")) %>%
  arrange(scenario, rep)
```

# Introduction

The *Policy for the management of sustainable salmon fisheries* (SSFP; 5 AAC 39.222) and the *Policy for statewide salmon escapement goals* (EGP; 5 AAC 39.223) were adopted into regulation during the 2000-2001 Alaska Board of Fisheries (board) cycle. These two policies outline roles, responsibilities, principles and criteria to guide management and regulatory actions for salmon fisheries, including the designation of a salmon stock of concern (SOC).

Under Commissioner directive, Alaska Department of Fish and Game (department) staff reviewed the SSFP and EGP during the spring of 2025. The department's escapement goal policy implementation team (EGPIT) was tasked with the review and created work groups to consider certain policy areas. One of the major areas identified for review was the SOC provisions within the SSFP. A team of 16 staff members met 12 times during the first half of 2025 to create recommendations, which were reported back to EGPIT on two occasions. EGPIT approved the recommended changes which were then presented them back to the Commissioner for final approval.

This document describes these recommendations. Both policy and technical issues during the review. Policy issues are addressed in @sec-policy (below) by changes to the structure and definitions of the SOC process described in the SSFP. Technical issues are described in @sec-technical (below) and refer to guidance ADF&G staff can use to implement the SOC provisions within the SSFP.

# Policy Review {#sec-policy}

## Fisheries Management Review

The department manages salmon fisheries to attain escapement goals. Escapement goals are based on analyses of historical escapement and incorporate information about historical production (the total number of fish that return from a given escapement) of the stock. Escapement goals are developed so that fishery managers can target escapements at levels that provide both escapement for future production and a surplus of salmon available for harvest. Because escapement goals are based on a time series of historical data the relationship they describe is relative to the "average" production of the stock.

Escapement goals are expressed as a range to allow for imprecision in fishery management actions yet provide stability and predictability to relevant fisheries under normal and expected variability in average production. When escapements fall below the lower bound of the escapement goal, two possible causes can be identified. First, the stock may have been overfished by directed or incidental harvests. Often, overfishing is actionable by the department and/or board and changes to fishery management plans can allow the stock to achieve the lower bound of the escapement goal over the next few seasons. Second, contemporary production may be less than the average production represented in the historical data. Variation in stock productivity can be moderate or severe. When a stock is experiencing moderate reductions in productivity, associated fisheries may require restrictions to time, area, and/or gear that reduce harvest to ensure the escapement goal is achieved. The department's ability to achieve escapement goals under moderate reductions in productivity depends on the efficacy of these management actions. When a stock is experiencing extreme reductions in productivity complete fisheries closures may be required. After all fisheries have been closed, the department's ability to manage the fishery is exhausted, and achieving the escapement goal depends on natural processes, which fishery managers cannot control.

## Description of the Existing SOC Process

When escapements are near or below the lower bound of the stock's escapement goal, despite specific management measures meant to achieve it, over a period of years the SSFP directs the department and board to consider whether the stock should be designated a SOC. The SSFP (5 AAC 39.222) describes the SOC process primarily in subsections (d)(1)(D)(ii), (d)(1)(D)(iii), (d)(3), (d)(4) and (d)(5). These subsections direct the department to recommend SOC listings to the board at one of three levels: yield, management or conservation concern. Definitions of SOC, the different levels of concern, and how to evaluate when a concern has been triggered are contained in 5 AAC 39.222(f)(#):

::: {#nte-levels .callout-note appearance="simple" icon="false"}
### Concern Definitions

\(35\) "stock of concern" means a salmon stock for which there is a yield, management, or conservation concern;

\(42\) "Yield concern" means a concern arising from a chronic inability, despite the use of specific management measures, to maintain expected yields, or harvestable surpluses, above a stocks escapement needs: a yield concern is less severe than a management concern, which is less severe than a conservation concern;

\(21\) "Management concern" means a concern arising from a chronic inability, despite the use of specific management measures, to maintain escapements for a salmon stock within the bounds of the SEG, BEG, OEG or other specified management objectives for a fishery: a management concern is not as severe as a conservation concern;

\(6\) "Conservation concern" means a concern arising from a chronic inability, despite the use of specific management measures, to maintain escapements for a stock above a sustainable escapement threshold (SET): a conservation concern is more severe than a management concern;

\(5\) "chronic inability" means the continuing or anticipated inability to meet escapement thresholds over a four to five year period. which is the approximate generation time of most salmon species;

\(39\) "sustainable escapement threshold" or "SET" means a threshold level of escapement below which the ability of the salmon stock to sustain itself is jeopardized: in practice, an SET can be estimated based on lower ranges of historical escapement levels, for which the salmon stock has consistently demonstrated the ability to sustain itself: the SET is lower than the lower bound of the BEG and lower than the lower bound of the SEG: the SET is established by the department in consultation with the board, as needed, for salmon stocks of management or conservation concern.
:::

The board and department work together in a defined process to determine if a salmon stock meets the criteria as a SOC. As part of the escapement goal review that occurs for a regulatory area before a board meeting cycle, the department reviews escapements, harvests, and other data relative to the SOC designations. The department then presents a memo at the board Work Session to inform the board of any stocks within the regulatory area that appear to meet the criteria for SOC designation, the level of concern, and a recommendation that the board discuss this designation at their regulatory meeting. Upon request from the board, the department will draft an action plan for the board to consider at their upcoming regulatory meeting. A draft action plan generally describes stock status, trends in escapement and harvest, and other factors that potentially impact stock production and/or harvest levels (e.g. changes in fish habitat, expanding and/or new fisheries). The draft plan also outlines the regulatory options the department has, will, or could take for the board to consider while evaluating changes to the stock's management plan, and options may include actions the department has, will, or could take to improve stock assessments and/or fish habitat. During the regulatory meeting board and department staff finalize the action plan by identifying actions the department should take to address the SOC listing.

After a stock is designated as a SOC and actions are implemented, the department reviews the status of the SOCs during their triennial review. If actions proved successful and the stock no longer meets the criteria for a SOC designation, the department will recommend delisting the stock; otherwise the department will recommend continued listing or a change in the level of concern.

## Evaluation of the Existing SOC Process

@fig-flowchart_current provides a flow chart describing the current SOC process. The first two "rows" of @fig-flowchart_current show decisions departmental staff must make before a recommendation to consider SOC status can be forwarded to the board. The first row of the flowchart describes reference points that are used to evaluate whether a salmon stock qualifies as a SOC. One fundamental issue with the current process has to do with the wide variety of reference points used to initiate SOC status. Because each reference point was developed to achieve a different management goal this diversity of reference points causes confusion about the goal of the SOC process itself. For example, stocks whose:

-   escapements chronically fail to exceed the SET (stocks of conservation concern) imply risk to **stock** *sustainability* given the definition of the SET in 5 AAC 39.222(f)(39)

-   escapements are chronically outside of the bounds of the SEG/BEG (some stocks of management concern) imply *future **fishery** yields* will be sub-optimal given the definitions of the BEG and SEG in 5 AAC 39.222(f)(3) and AAC 39.222(f)(36), respectively

-   escapements are chronically outside of the bounds of the OEG or some other board identified management objective (other stocks of management concern) imply the *board identified management objective* is not being achieved for the **stock or fishery** given the definitions of the OEG and inriver run goal in 5 AAC 39.222(f)(25) and AAC 39.222(f)(19), respectively

-   realized yields are negligible (yield concerns) imply *harvestable surpluses* are not available to the **fishery**.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-flowchart_current
#| out.width: 3000
#| out.heigth: 35000
#| fig-cap: "Current SOC process"
knitr::include_graphics("./SOC_flowchart_current.png")
```

Notice that initiating the SOC process using a wide variety of reference points does not provide consistency with respect to the *type of risk* or whether it is the **fishery or stock** which is at risk. Except for the SET, which is a limit reference point that managers should strive to exceed in order to avoid conservation issues and has yet to be established for any salmon stock in the Alaska, the other reference points used to initiate the SOC process are target reference points that are designed to achive fishery objectives. This lies in stark contrast to the public perception of a SOC that assumes stock sustainability is at risk when a stock is listed as a SOC.

The second row of the flowchart (@fig-flowchart_current) identifies the three levels of concern in the SSFP. The conservation concern level is cleanly defined in that stocks identified as a conservation concern clearly indicate a risk to stock sustainability. That said, a conservation concern has never been recommended by the department because there has been no standardized procedure for identifying an SET, although see @sec-SET for an new procedure for identifying an SET. Notice that conservation concerns are a subset of management concerns given the definition of the SET 5 AAC 39.222(f)(39), which states that "the SET is lower than the lower bound of the BEG and lower than the lower bound of the SEG.".

In contrast to the definitions of conservation concern, which indicate a risk to the stock, definition the definitions for yield and management concerns primarily indicate risk to current and future fisheries. In theory, management concerns and yield concerns are clearly differentiated because escapements for stocks of management concern chronically fall outside the bounds of the escapement goal whereas escapements for stocks of yield concern continue to fall within the bounds of the escapement goal but are associated with run sizes close enough to the lower bound of the escapement goal that fisheries are closed or severely restricted and thus provide negligible yield.

Yield concerns were frequently used when the SOC process was first implemented. During the first 10 years of the SOC process, 2000–2011, SOC listings were evenly split between stocks of yield concern (13) and stocks of management concern (13). Over time staff realized differentiating between stocks of yield and management concern was difficult to do objectively because stocks chronically failing to realize yields are necessarily experiencing low productivity and associated with run sizes at or near the lower bound of the stock's escapement goal. In addition, because department staff manage fisheries to achieve escapement goals, not a specified level of harvest, the yield realized during small runs is largely a function of the annual production and cannot be increased by fisheries management. This makes identifying a target yield a subjective exercise that may be either unachievable or in conflict with the department's responsibility for escapement goal management. Given these issues, the department has not recommended a new stock of yield concern since 2011.

The third "row" of @fig-flowchart_current describes the department and board response after the department has recommended the board consider a SOC designation; i.e., the action plan. An effective action plan results in the relevant stock being removed from the SOC process. One way to evaluate if action plans produced by the board and department have resulted in stocks being removed from the SOC process is to look at past SOC listings and delisitings. In @tbl-stocks salmon stocks that have been considered SOCs are shown as unique entries each time they entered the SOC process. The 48 SOC listings that have occurred since 2000 have been associated with 39 unique salmon stocks (21 Chinook, 9 chum and 9 sockeye) and 41 entries into the SOC process. For stocks that have been listed at least three years (and thus had an opportunity to be delisted under the triennial BOF cycle) 88% and 86% of the chum and sockeye salmon stocks, respectively, that entered the SOC process were ultimately removed from the process while only 36% of Chinook salmon stocks have done so. For the stocks which were removed from the SOC process, 83% of Chinook salmon, 71% of chum salmon and 71% of sockeye salmon exited the SOC process within two board cycles of being listed. This information indicates action plans are effective in some situations and ineffective in others.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: tbl-stocks
#| tbl-cap: "SOC stock history 2000-2025. Stocks of cncern are shown as unique entries each time they are enter the SOC process."
SOC_current <- data.frame(
  region = c(rep("Southeast", 7), rep("Central", 8), rep("AYK", 2), rep("Westward", 4)),
  stock = c("King Salmon River", "Stikine River", "Andrew Creek", "Taku River", "McDonald Lake", "Hugh Smith Lake", "Northern Southeast Outside Subregion",
            "McNeil River", "Chuitna River", "Theodore River", "Alexander Creek",  "Eastside Susitna River", "Nushagak River", "Kenai River - late run", "Mikfik Lake", 
            "Yukon River", "Norton Sound Subdistrict 5 & 6", 
            "Karluk River", "Ayakulik River", "Chignik River", "Chignik River - early run"),
  species = c(rep("Chinook", 4), rep("Sockeye", 2), "Chum", 
              "Chum", rep("Chinook", 6), "Sockeye",
              rep("Chinook", 2),
              rep("Chinook", 3), "Sockeye"),
  list_date = as.Date(
    c("2018-1-1", rep("2022-3-1", 3), "2018-1-1", rep("2024-10-1", 2),
      "2016-12-1", rep("2011-2-1", 3), "2020-2-1", "2023-3-1", rep("2023-10-1", 2),
      "2000-9-1", "2004-1-1", 
      "2011-1-1", "2020-1-1", "2023-2-1", "2022-3-1")
  ),
  type = c(rep("Management", 7),
           rep("Management", 8),
           rep("Yield", 2),
           rep("Management", 4)),
  last_review = c(rep(2024, 7),
                  rep(2023, 5), 2022, rep(2023, 2),
                  rep(2022, 2),
                  rep(2023, 2), rep(2022, 2))
)

#Delisted SOC
SOC_delisted <- data.frame(
  region = c(rep("Southeast", 6), rep("Central", 11), rep("AYK", 9), rep("Westward", 1)),
  stock = c("Hugh Smith Lake", "McDonald Lake", "Chilkat River", "Unuk River", "Chickamin River", "Klukshu River",
            "Anchor River", "Lewis River", "Sheep Creek", "Goose Creek", "Kvichak River", "Fish Creek", "Susitna (Yentna) River", "Willow Creek", "Goose Creek", "Kvichak River", "Kvichak River",
            "Norton Sound Subdistrict 1", "Toklat River", "Fishing Branch", "Yukon River - Summer Chum", "Kuskokwim River", "Kuskokwim River", "Yukon River - Fall Chum", "Norton Sound Subdistrict 2 & 3", "Norton Sound Subdistrict 1", 
            "Swanson Lagoon"),
  species = c(rep("Sockeye", 2), rep("Chinook", 3), "Sockeye",
              rep("Chinook", 4), rep("Sockeye", 3), rep("Chinook", 2), rep("Sockeye", 2),
              rep("Chum", 5), "Chinook", rep("Chum", 3),
              rep("Sockeye")),
  list_date = as.Date(
    c("2003-2-1", "2009-2-1", "2017-10-1", "2018-1-1", rep("2022-3-1", 2),
      "2001-11-1", "2011-2-1", rep("2014-1-1", 2), "2003-12-1", "2002-1-1", "2008-2-1", rep("2011-2-1", 2), "2000-9-1", "2009-10-1",
      rep("2000-9-1", 8), "2007-1-1",
      "2013-2-1")
  ),
  type = c(rep("Management", 6),
           rep("Management", 5), rep("Yield", 6),
           rep("Management", 4), rep("Yield", 5),
           "Management"),
  delist_date = as.Date(
    c("2006-1-1", "2012-2-1", rep("2024-10-1", 4),
      "2004-11-1", "2019-10-1", rep("2020-2-1", 2), "2009-10-1", "2005-1-1", rep("2020-2-1", 2), "2014-1-1", "2003-12-1", "2012-12-1",
      "2007-1-1", rep("2004-1-1", 2), rep("2007-1-1", 4), "2019-1-1", "2016-1-1",
      "2019-2-1")
  )
)

SOC_tab <-
  SOC_current %>%
  mutate(delist_date = as.Date(NA)) %>%
  rbind(SOC_delisted %>% mutate(last_review = NA)) %>%
  select(-last_review) %>%
  mutate(years_listed = round(as.numeric(difftime(as.Date(ifelse(is.na(delist_date), today(), delist_date)), list_date, units = "days")) / 365, 1),
         year = as.numeric(format(list_date, format = "%Y")))
# #Statistics
# dim(SOC_tab)
# table(SOC_tab$type)
# table(SOC_tab$region)
# table(SOC_tab$species)
# table(is.na(SOC_tab$delist_date))
# # get year of last yield concern
# table(SOC_tab$year, SOC_tab$type)
# # distribution of concern level vrs. time
# SOC_tab %>%
#   mutate(break_2011 = ifelse(year <= 2011, "<=2011", ">2011")) %>%
#   group_by(type, break_2011) %>%
#   summarise(n = n())

multiple_listings <- 
  SOC_tab %>%
  mutate(delisted = !is.na(delist_date)) %>%
  group_by(species, stock) %>%
  summarise(n_listings = n(),
            n_delistings = sum(delisted)) %>%
  filter(n_listings >1 & n_delistings < n_listings) %>%
  select(species, stock)

SOC_stocks <-
  SOC_current %>%
  mutate(delist_date = as.Date(NA)) %>%
  rbind(SOC_delisted %>% mutate(last_review = NA)) %>%
  select(-last_review) %>%
  mutate(stock = ifelse(stock %in% multiple_listings$stock & 
                          species %in% multiple_listings$species &
                          !is.na(delist_date), paste0(stock, "_temp"), stock)) %>% #rename since listings were separated in time
  group_by(species, stock) %>%
  arrange(species, stock, list_date) %>%
  summarize(list_date = min(list_date), delist_date = max(delist_date),
            type = paste(type, collapse = " -> ")) %>%
  mutate(stock = ifelse(stock %in% c("Sheep Creek", "Goose Creek", "Willow Creek"), "temp", stock)) %>% #create a temporary group to get the type correct
  group_by(species, stock) %>%
  arrange(species, stock, list_date) %>%
  summarize(list_date = min(list_date), delist_date = max(delist_date),
            type = paste(type, collapse = ", ")) %>%
  mutate(type = ifelse(stock == "temp", paste0("(", type, ")"), type),
         stock = ifelse(stock == "temp", "Eastside Susitna River", stock)) %>%
  group_by(species, stock) %>%
  arrange(species, stock, list_date) %>%
  summarize(list_date = min(list_date), delist_date = max(delist_date),
            type = paste(type, collapse = " -> ")) %>% 
  mutate(stock = gsub("(.*)_temp", "\\1", stock),
         year = as.numeric(format(list_date, format = "%Y")),
         years_listed = round(as.numeric(difftime(as.Date(ifelse(is.na(delist_date), today(), delist_date)), list_date, units = "days")) / 365, 1))
# # #Statistics
# dim(SOC_stocks) # of stock listings
# # unique stocks
# unique_stocks <- !duplicated(data.frame(SOC_stocks$species, SOC_stocks$stock)) # of stocks
# sum(unique_stocks)
# # unique stocks by species
# table(SOC_stocks$species[unique_stocks])
# # % delisted
# SOC_stocks %>%
#   filter(year < as.numeric(format(today(), format = "%Y")) - 3) %>%
#   group_by(species) %>%
#   summarise(pct = mean(!is.na(delist_date)))
# # BOF cycles till delisted
# SOC_stocks %>%
#   filter(!is.na(delist_date)) %>%
#   mutate(BOF_cycles = round(years_listed, 0) %/% 3) %>%
#   group_by(species, BOF_cycles) %>%
#   summarise(n = n()) %>%
#   mutate(pct = n / sum(n))

SOC_stocks %>% 
  group_by(species, stock) %>%
  mutate(list_date = format(list_date, format = "%Y"),
         delist_date = ifelse(is.na(delist_date), "-", format(delist_date, format = "%Y")),
         first_yr = min(as.numeric(list_date)), 
         sort = paste0(first_yr, stock)) %>%
  arrange(species, sort, list_date) %>%
  select(species, stock, type, list_date, delist_date, years_listed) %>%
  flextable() %>%
  set_header_labels(species = "Species", 
                    stock = "Stock", 
                    type = 'Concern Level',
                    list_date = 'Listing \nYear', 
                    delist_date = 'Delisting \nYear', 
                    years_listed = 'Years \nListed') %>%
  footnote(i = c(9), j = 2, 
           value = as_paragraph(
             c(" Three stocks (Willow, Goose and Sheep Creek) with SOC listings were combined into a single SOC listing (Eastside Susitna River) in 2020 after the escapement goals for these populations were consolidated into a single goal. The listing year shown is the earliest listing year for any of the 3 original stocks while the SOC type shown gives the progression for each individual stock before consolidation (within the parenthesis) as well as the SOC type after consolidation.")),
           ref_symbols = "a",
           part = "body") %>%
  merge_v(~ species + stock) %>%
  valign(j = 1:6, valign = "top") %>%
  autofit()
```

Which issues are effectively resolved by action plans may be illuminated by considering the cause of the SOC listing. When escapement is chronically below the lower bound of the escapement goal due to overharvest, action plans have a reasonable likelihood of success within one or two board cycles (three to six years) because the board of fisheries can modify regulations to reduce harvest. (**provide an example: see Piston message**).

In contrast, when escapement is chronically below the lower bound of escapement goal due to severely reduced productivity, the department has generally exhausted most reasonable management measures through it's emergency order authority prior to missing the goal yet again. In this instance, actions proposed in the action plan are likely redundant to the emergency orders and may have already demonstrated that reductions in harvest cannot be used to achieve the escapement goal and resolve the underlying issue. (**provide an example: maybe Susitna Chinook**)

## Policy Recomendations {#sec-recs}

Department review of the existing SOC process identified confusion resulting from housing a wide variety of fishery management objectives within the same process, questionable utility behind the three different SOC levels, and questionable efficacy of action plans in at least some situations where the SOC process is currently applied. The goal of our suggested policy revisions is to correct these issues. The major feature of the revised policy is the separation of low annual abundance issues into two distinct processes according to the availability of a harvestable surplus– (1) a revised SOC process with scope narrowed to situations where harvestable surpluses are absent and (2) a fishery review process for situations where harvestable surpluses are available.

### SOC Process Revisions

The department recommends the SOC process be narrowed to situations where harvestable surpluses are absent by evaluating whether the stock's annual run size (rather than escapement) demonstrates a chronic inability to meet the lower bound of the SEG or BEG. When annual *run sizes* are below the lower bound of the stock's escapement goal, it means no management action could have been taken that would have allowed the lower bound of the escapement goal to be achieved. Therefore, this change reduces the SOC process to only those stocks that are experiencing extreme reductions in productivity. This definition also clarifies that SOC designations are only relative to the lower bound of the escapement goal range and should be made relative to the SEG or BEG set by the department.

Another recommended change is that the department designate (rather than recommend) SOCs after determining they meet the SOC criteria. Evaluation for SOC eligibility would occur as part of each management area's triennial review and be made at the work session preceding each management area's regular board meeting. Allowing the department to make the designation directly provides a more timely and less confusing process than making SOC recommendations at the work session but not making SOC designations till the annual meeting is underway and management actions are being considered. Allowing the department to make SOC designations is also consistent with the department's existing responsibilities to to establish SEGs and BEGs prior ot the board meeting.

Once a stock is designated as a SOC we recommend the SET for the stock be identified and communicated to the board and public at the area's regular board meeting. Doing so clearly communicates the type of risk to the stock. If annual run sizes are below the lower bound of the stock's SEG or BEG but above the stock's SET, then the stock is experiencing production declines that are so severe the stock can no longer support fisheries. We call this situation a productivity risk. If annual run sizes are below the stock's SET, then the stock is experiencing production declines that are so severe that stock sustainability may be compromised. We call this situation a depletion risk.

Finally, the department recommends that SOC designations be addressed by the board and department collaborating to create a recovery plan at the area's regular meeting. A recovery plan is a temporary management plan that supersedes the stock's existing management plan and sunsets when the stock is removed from SOC status. Replacing action plans with recovery plans in the revised process clearly communicates that SOCs are caused by environmental and biological variation in productivity that exceeds our management capability and will require significant, prolonged reductions to harvest until productivity returns to a level that can support a fishery.

The left hand column of @fig-flowchart_proposed shows a flowchart describing the recommended SOC process.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-flowchart_proposed
#| out.width: 3000
#| out.heigth: 55000
#| fig-cap: "Proposed SOC process"
knitr::include_graphics("./SOC_flowchart_proposed.png")
```

### Fishery Review Process

While the department felt the SOC process would be improved by restricting the process to stocks with severe productivity reductions, it was also recognized that the existing process has been effective in resolving some fishery issues faced by the board and department. To preserve this utility, the department recommends the SOC process be augmented by a parallel process, called a fishery review, enacted at the discretion of the board and appropriate in cases where stock productivity is less severely reduced and/or when there is overharvest. This parallel process allows for broad fishery issues to be brought before the board without a regulatory proposal.

The department recommends that fishery reviews occur at the board's discretion and that the department's role in initiating the process be limited to notification of potential issues. Notification would occur at the board work session preceding each management area's regular board meeting. There are two situations when the department would be obligated to notify the board. First, the department will notify the board whenever the escapements for a particular stock have displayed a chronic inability to achieve the lower end of a board designated OEG or inriver run goal. Second, the department will notify the board whenever escapements have displayed a chronic inability to achieve the lower end of the stock's SEG or BEG but the stock does not qualify as a SOC[^1]. After the board is notified at the work sesssion, the board may discuss these stocks and any others that might warrant a fishery review and then directs the department to conduct the fishery review for the selected stocks prior to the regular board meeting. It is important to note that the board has complete discretion over which stocks are selected for a fishery review.

[^1]: i.e. when run size was sufficient to exceed lower end of the goal range.

At the regular board meeting, for each stock selected for fishery review the board will use the information in the fishery review provided by the department and any information associated with proposals submitted for that stock to identify potential management changes. Regulatory changes associated with the fishery review occur through the regular board process and may consist of maintaining the status quo, creating new or modifying existing management plans, and action on any submitted proposals.

The right hand column of @fig-flowchart_proposed shows a flowchart describing the recommended fishery review process.

### Data Limited Fisheries

The distinction between the SOC and the fishery review process described above rests on whether there is a harvestable surplus available to allocate: no for the SOC process and yes for the fishery review process. While this distinction is easy to make when stock specific harvest information is available, there are many salmon stocks where we lack this information and cannot make a purely quantitative distinction. In those cases, it will be up to the department to make a subjective decision regarding the likelihood that mixed stock fishery harvest for the stock in question exceeds the difference between the annual escapement and the lower bound of the stock's escapement goal. When the department, based on scientifically supported expert opinion, believes the mixed stock fishery harvest for the stock in question does not exceed the difference between the annual escapement and the lower bound of the stock's escapement goal, the stock would enter the SOC process. When the department believes the mixed stock fishery harvest for the stock in question exceeds the difference between the annual escapement and the lower bound of the stock's escapement goal, the stock would enter the fishery review process.

The top right corner of @fig-flowchart_proposed shows a flowchart depiction of this decision tree.

# Technical Review {#sec-technical}

In addition to the structural policy issues described above the review team identified two technical issues that needed to be addressed: 1) guidance regarding the interpretation of chronic inability when listing or delisting a SOC, and 2) the need for a procedure the establish Sustainable Escapement Thresholds (SET) in the State of Alaska. This review uses simulation to investigate solutions to these issues.

## Spawner-Recruit Dynamics

ADF&G escapement goals are estimated using compensatory population dynamics (red lines in @fig-gamma) which assert that per capita production increases as population size decreases[^2]. Compensatory population dynamics have been empirically observed for many stocks during periods of high spawning abundance and provide the technical foundation for liberalizing fisheries above the upper bound of a salmon escapement goal. During periods of low spawning abundance fishery mangers assume compensatory dynamics exist but have seldom observed spawning escapements small enough to verify. This is a critical assumption during periods of low spawning abundance because by using it fishery scientists are not including the possibility that a population can become imperiled at low abundance, for various density dependent or stochastic reasons, in the assessment. Many authors accommodate this obvious discrepancy by setting an arbitrary lower bound (i.e. 50 or 100 fish) below which they consider a population extinct while simulating population dynamics and/or by avoiding an arbitrary limit reference point (i.e. \~50% of the lower bound of the stock's escapement goal) during actual fisheries management.

[^2]: i.e. the population *compensates* for a reduction in it's size by producing more recruits

An alternative to this approach would be to account for possible conservation issues within the assessment framework by assuming depensatory population dynamics... i.e. per capita production decreases as population size decreases *at low levels of abundance*. Like compensatory dynamics, depensatory population dynamics have not been consistently verified due to the lack of very small spawning abundances observed. That said, depensatory population dynamics garner consistent interest because they imply stocks will be slow to recover from low levels of spawning abundance and may not recover from extremely low levels of spawning abundance. Models that allow for depensatory dynamics include a peak on the $\textrm{log}\left(\frac{R}{S}\right)$ scale where compensatory dynamics end and depensatory dynamics begin as spawning abundance decreases (dots in @fig-gamma) and are thus consistent with empirical observations at large abundances and precautionary at small abundances that have yet to be observed. In this document we will use the term non-depensatory for models that include **only** compensatory dynamics (i.e., Ricker) and the term depensatory for models that include depensatory dynamics at small spawning escapements and compensatory dynamics at medium and large spawning escapements.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-gamma
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Spawner-recruit dynamics under non-depensatory (red line) and depensatory assumptions. Dot-dash lines represent the point where stock dynamics shift from compensatory to depensatory as spawning abundance decreases. Dash lines represent an unstable equilibrium below which spawning abundance trends towards zero."

#example plot
#parameter set
beta <- 0.0001
temp_par <- gamma_par(1 / beta, Ricker(1, 0.0001, 1 / beta), seq(1, 1.6, 0.3)) #c(1, 1.1, 1.6))

#depensation points
dat_dep <-
  as.data.frame(temp_par) %>%
  filter(c != 1) %>%
  rowwise() %>%
  mutate(S = (c-1) / b,
         R = SRgamma(a, b, c, S = S),
         logRS = log(SRgamma(a, b, c, S = S) / S),
         gamma = as.character(c)) %>%
  ungroup() %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  mutate(Parameter = factor(Parameter, levels = c("R", "logRS")))

#critical values
dat_crit <-
  as.data.frame(temp_par) %>%
  filter(c > 1.2) %>%
  rowwise() %>%
  mutate(S = uniroot(function(S) {SRgamma(a, b, c, S) - S}, c(5, 2500), tol = 0.00001)$root,
         R = SRgamma(a, b, c, S = S),
         logRS = log(SRgamma(a, b, c, S = S) / S),
         gamma = as.character(c)) %>%
  ungroup() %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  mutate(Parameter = factor(Parameter, levels = c("R", "logRS")))

pal <- scales::hue_pal()(7)

#create plot
data.frame(S = rep(seq(0, 20000, length.out = 100), times = length(temp_par[[3]])),
           alpha = rep(temp_par[[1]], each = 100),
           beta = rep(temp_par[[2]], each = 100),
           gamma = rep(temp_par[[3]], each = 100)) %>%
  mutate(R = SRgamma(alpha =  alpha, beta = beta, gamma = gamma, S),
         logRS = log(R / S)) %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  mutate(Parameter = factor(Parameter, levels = c("R", "logRS"))) %>%
  ggplot(aes(x = S, y = Value, color = as.character(gamma))) +
  geom_line() +
  geom_point(data = dat_dep) +
  geom_segment(data = dat_dep, aes(xend = S, y = -Inf, yend = Value), linetype = 4) +
  geom_segment(data = dat_crit, aes(xend = S, y = -Inf, yend = Value), linetype = 2) +
  geom_abline(aes(slope = x, intercept = y), data.frame(x = c(1, 0), y = c(0, 0), Parameter = factor(c("R", "logRS"), levels = c("R", "logRS")))) +
  scale_x_continuous(breaks = seq(0, 20000, 2500)) +
  scale_color_manual(name = "Gamma (\u03B3)",
                     labels = c("1 (Ricker)", "1.3", "1.6"),
                     values = pal) +
  theme_bw() +
  facet_grid(Parameter ~ ., scales = "free_y")
```

The spawner-recruit curves shown in @fig-gamma are described mathematically as the gamma spawner-recruit relationship:

$$
\begin{align*}
R~&=~\alpha S^\gamma e^{(-\beta S)} \\
\text{log}\left(\frac{R}{S}\right)&=~\textrm{log}(\alpha)+(\gamma - 1)\text{log}(S)\ -\beta S
\end{align*}
$$

The $\alpha$ parameter describes stock productivity while the $\beta$ and $\gamma$ parameters describe the strength of compensatory and depensatory density-dependence, respectively. The Ricker spawner-recruit relationship is a special case of the gamma spawner-recruit relationship when $\gamma = 1$ . Notice the relationships shown in @fig-gamma have been adjusted so that they all have same values for $S_{max}$ and $R_{max}$[^3] and can thus be viewed as modifications of a Ricker curve for a single population with increasingly strong levels of depensatory dynamics. Because the department uses the Ricker realtionship to estimate escapement goals, the gamma spawner-recruit relationship is an excellent vehicle through which to explore the implications of depensatory spawner-recruit dynamics relative to the non-depensatory assumptions currently in use. @sec-theory discusses the theoretical foundation for using the gamma spawner-recruit relationship and it's utility for stock assessment during times of low spawning abundance.

[^3]: Which can be done by algebraic manipulation of $\alpha$ and $\beta$.

## Simulation Framework

The simulation framework given below approximates the circumstances staff will face when determining SOC status during ADF&G stock assessments. Firstly, we recognize the assumption of non-depensatory spawner-recruit dynamics currently used in salmon management. To ensure our simulation framework is robust to this initial condition we started by identifying a suite of Ricker (non-depensatory) spawner-recruit and fishery parameter combinations that span the range of values observed in Alaskan fisheries. Second, we developed depensatory dynamic equations that are similar with respect to maximum recruitment and the spawning escapement associated with maximum recruitment, to the non-depensatory scenarios identified. This process allowed us to produce simulated datasets that match both our current assumptions (non-depensatory spawner-recruit dynamics) as well as the depensatory dynamics that are possible given the empirical data we currently posses. Thirdly, we assume salmon stocks under SOC consideration are in a low productivity regime and explicitly include reduced productivity at the end of every simulated dataset.

### Parameter Space for Salmon Populations

In an effort to represent a wide variety of species and populations, simulations will be performed across a grid of spawner-recruit parameters. Non-depensatory dynamics are described by Ricker curves where the parameter space includes productivity $\textrm{log}(\alpha)$ of either $1$, $1.5$ and $2$ which is assumed to cover the range of productivity values found in wild Alaskan salmon poplulations. Because the compensatory density dependance parameter $\beta$ scales the spawner-recruit relationship without changings it's shape all simulations assume compensatory density-dependence of $\beta=0.0001$ and maximize recruitment $S_{max}$ at $10,000$ spawning fish.

In addition, we derive 2 depensatory scenarios ($\gamma = 1.3$ or $1.6$) from each non-depensatory scenario ($\gamma = 1$) while adjusting the values for $\textrm{log}(\alpha)$ and $\beta$ when $\gamma > 1$ such that $R_{max}$ and $S_{max}$ of the spawner-recruit relationship when $\gamma > 1$ is equal to the values of $R_{max}$ and $S_{max}$ when $\gamma = 1$. Values for $\gamma$ spanning $1$ to $1.6$ are assumed to span the range of plausible values wild salmon populations might assume primarily because values in excess of $1.6$ likely would have already been detected in empirical data. For simplicity, we use productivity ($\textrm{log}(\alpha) = 1$, $1.5$, or $2$) from the non-depensatory scenarios to refer to depensatory scenarios which share the same values of $R_{max}$ and $S_{max}$ even though the values of $\textrm{log}(\alpha)$ and $\beta$ used to generate the simulated datasets change for the depensatory cases.

Escapement goals for each stock were derived from the non-depensatory spawner-recruit relationship associated with each level of productivity ($\textrm{log}(\alpha) = 1$, $1.5$, or $2$). This process mimics actual ADF&G fisheries management in that escapement goals have been set assuming a non-depensatory spawner-recruit relationships and any empirical data we collect will be relative to those goals. In addition, 2 values, one extreame and one typical, were used for setting the lower bound of the escapement goals used in these simulations. Lower bounds that were intended to achieve 50% of MSY, representing an extremely aggressive fishery[^4] and 90% of MSY, representing a conservative fishery. All simulations used an upper escapement goal bound that was selected to achieve 70% of MSY based on the non-depensatory spawner-recruit relationship.

[^4]: Fifty percent of MSY is intended to represent an extreme example only rarely used in Alaskan salmon fisheries. For example, the current Egegik River SEG of 800,000-1,400,000 fish provides approximately 48% (3,900,000 fish) of MSY (8,100,000 fish) at the lower bound using the larger prior assumption for equilibrium stock size (Cunningham et al. 2015b Evaluation of alternative methods to estimate biological escapement goals, Table 4 and Figure 4).

```{r}
#| echo: FALSE  
#| label: tbl-scenarios  
#| tbl-cap: "Base spawner-recruit and fishery parameter combinations used in this simulation study. Simulations to assess chronic inablity and SETs added parameters to this framework"
rep_scenarios_gp %>%
  group_by(scenario) %>%
  filter(rep == min(rep), 
         sigma == 0.5) %>%
  ungroup() %>%
  mutate(Rmax = round(exp(lnalpha_1)/beta*exp(-1), 0),           
         Smax = 1/ beta) %>%
  select(lnalpha_1, gamma, pct_MSY, Smax, Rmax) %>%
  arrange(lnalpha_1, gamma, pct_MSY) %>%
  flextable() %>%    
  set_header_labels(
    lnalpha_1 = "ln(\u03b1)",
    gamma = "\u03b3",
    pct_MSY = "MSY % @ EG \n lower bound",
    Smax = "Smax",
    Rmax = "Rmax") %>%
  merge_v(j = c("lnalpha_1", "gamma")) %>%
  valign(j = c("lnalpha_1", "gamma", "pct_MSY"), valign = "top") %>% 
  autofit() 
```

Finally, all simulated datasets included process $\sigma_F$ and observation $\sigma_N$ error or 0.2 which we assume to represent moderate levels of error for both components. Fishing power was a function of the productivity of the population and set to $30\%$, $55\%$ and $80\%$ for stocks with non-depensatory productivity of $1$, $1.5$ and $2$, respectively, to represent the likelihood that the largest fisheries are associated with the most productive stocks. In addition to the parameters described above the simulation model used can accomdate unique values for process error $\sigma$, temporal auto-correlation $\phi$, and age-at-maturity schedules. The simulation model is described in @sec-sim_model.

### Productivity Regimes {#sec-productivity-regimes}

When a salmon stock consistently misses the lower bound of it's escapement goal in a well-managed fishery, productivity has undergone a large decline. For this exercise we assume the initial years of each simulated dataset occur under the productivity assumptions described above while the data were generated assuming sharply reduced productivity thereafter. For labeling and discussion purposes we will continue to describe parameter combinations based on historical productivity and distinguish reduced productivity simulations with the words "reduced productivity". Specifically, during reduced productivity the $\beta$ and $\gamma$ parameters were held constant while productivity was lowered[^5] such that $\textrm{log}(\alpha^*)=\frac{lb}{\beta}$ where $lb$ is the lower bound of the escapement goal[^6]. The assumed spawner-recruit relationships for each productivity regime are shown in @fig-regime. Notice that under reduced productivity conditions there is little harvestable surplus when assuming non-depensatory spawner-recruit dynamics and the stock often fails to replace itself when assuming depensatory spawner-recruit dynamics.

[^5]: For the non-depensatory (Ricker) model, this adjustment moves the escapement associated with equilibrium abundance $S_{eq}$ to be equal to the lower bound of the escapement goal while leaving the escapement associated the maximum recruitment $S_{max}$ unchanged.

[^6]: Recall that when $\gamma > 1$, $\alpha$ and $\beta$ are adjusted such that $S_{max}$ and $R_{max}$ are the same for the non-depensatory ($\gamma = 1$) and the depensatory ($\gamma > 1$) cases. When calculating stock parameters under reduced productivity the adjustment to $\textrm{log}(\alpha^*)$ in the non-depensatory case was made before calculating $\alpha$ and $\beta$ parameters which equate $S_{max}$ and $R_{max}$ for the depensatory and non-depensatory cases.

```{r}
#| echo: FALSE
#| label: fig-regime  
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The assumed spawner-recruit relationships used in this simulation study. Each panel shows 3 spawner-recruit relationships described in @tbl-scenarios for both the historical and reduced productivity regimes"  
rep_scenarios_gp %>%
  group_by(scenario) %>%
  filter(rep == min(rep), sigma == 0.25) %>%
  ungroup() %>%
  select(lnalpha_1, pct_MSY, lb, ub, a_1, b, gamma, a_2) %>%
  slice(rep(1:n(), each = 101)) %>%
  mutate(S = rep(seq(0, 2 * 1 / max(beta), by = 200), times = 18),
         R_historical = SRgamma(alpha = a_1, beta = b, gamma = gamma, S = S),
         R_reduced = SRgamma(alpha = a_2, beta = b, gamma = gamma, S = S)) %>%
  pivot_longer(cols = starts_with("R_"), 
               names_to = "Productivity", 
               names_pattern = "R_(.*)",
               values_to = "R") %>%
  ggplot(aes(x = S, y = R, color = as.character(gamma), linetype = Productivity)) +
  geom_rect(aes(xmin = lb,
                xmax = ub,
                ymin = -Inf,
                ymax = Inf),
            fill = "grey95",
            inherit.aes = FALSE) +
  geom_line() +      
  geom_abline() +
  scale_y_continuous(name = "R") +
  scale_color_manual(name = "Gamma (\u03B3)",
                     labels = c("1 (Ricker)", "1.3", "1.6"),
                     values = pal) +
  theme_bw() +
  facet_grid(paste0("ln(\u03B1): ", lnalpha_1) ~ paste0("%MSR @ lb: ", pct_MSY),                 scales = "free_y") 
```

### Simulated Population Trends

@fig-S shows median simulated escapement and run size time series for populations parameterized as described above. Notice that the both time series are unresponsive to the modeled change in productivity immediately after the reduced productivity regime begins (vertical line). We also see that while escapements for populations with non-depensatory dynamics ($\gamma=1$) are nearly asymptotic with the lower bound of the escapement goal, abundance for populations with depensatory dynamics continue to fall slowly below the lower bound of the escapement goal under the simulation assumptions. Thus the range of simulations considered include both our traditional assumptions (non-depensatory dynamics) and behavior precautionary management should avoid[^7]. I'd argue these simulation also suggest targeting 50% of MSY at the escapement goal lower bound is dangerous as discovery of potential depensatory dynamics is delayed until spawning abundances are already dangerously low.

[^7]: Future simulations should consider if adjusting the lower bound of the escapement goal to match the estimated depensatory dynamics provide relief from the gradually reducing escapements shown here.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-S
#| fig.height: 8
#| fig.width: 8
#| fig.cap: "Median simulated escapement (grey) and run size (black) for stocks with ln(\u03B1) = 1.5 and \u03B4 = 0.5. Reference points associated with each group of simulations are shown as an vertical black line (timing of the regime change), a grey rectangle shows (escapement goal bounds) and a dashed red line (theoretical SET)."  
col = c("S" = "grey", "N" = "black")

rep_scenarios_gp %>%
  filter(lnalpha_1 == 1.5, sigma == 0.5, pct_lb == 1) %>%
  mutate(sim = map(data, function(x) x$sim),
         S = map(data, function(x) x$S),
         N = map(data, function(x) x$N)) %>%
  unnest(c(sim, S, N)) %>%
  pivot_longer(cols = c(S, N), names_to = "Abundance", values_to = "value") %>%
  group_by(scenario, sim, lnalpha_1, lnalpha_2, a_1, a_2, b, gamma, sigma, pct_MSY, pct_lb, lb) %>%
  mutate(SET = (gamma - 1) / b) %>%
  ggplot(aes(x = sim, y = value,  color = Abundance)) +
  geom_rect(aes(ymin = lb, ymax = ub, xmin = -Inf, xmax= Inf), 
            fill = "grey",
            alpha = 0.01,
            inherit.aes = FALSE) +
  stat_summary(aes(x = sim, y = value, color = Abundance), 
               fun = median, 
               geom = "line", 
               linewidth = 1) +
  geom_hline(aes(yintercept = SET), linetype = 2, color = "red") +
  geom_vline(aes(xintercept = 20)) +
  scale_color_manual(values = col, 
                     labels = c("S" = "Escapement", "N" = " Run")) +
  labs(x = "Simulation Year", y = "Number of salmon") +
  theme_bw() +
  facet_grid(paste0("\u03B3: ", gamma) ~ paste0("%MSY @ lb: ", pct_MSY)) 
```

## Chronic Inability

```{r}
#| include: FALSE
col <- c("#00CC00", "red")

rep_scenarios <- readRDS("..//rep_scenarios_ChronicInability_age.rds")

# SOC listings ---------------------------------------------------------
# function to calculate SOC status
# window: # of years under consideration when evaluating "chronic inability"
# misses_in: # of missed in window that result in a SOC listing
# makes_out: # of makes in window that result in a SOC delisting.
# originally written to work inside a list-column although it seems to work in groups too.
get_SOC2 <- function(x, misses_in, makes_out, window = 5){
  SOC <- character()
  SOC[1:min(length(x), (window - 1))] <- NA
  from_noconcern <- function(x){
    if(sum(x, na.rm = TRUE) >= misses_in){"SOC"} else("No concern")
  }
  from_SOC <- function(x){
    if(sum(x, na.rm = TRUE) > (window - makes_out)){"SOC"} else("No concern")
  }
  if(length(x) >= window){
    for(i in window:length(x)){
      SOC[i] <- switch(as.character(SOC[i-1]),
                       'NA' = from_noconcern(x[((i-1)-(window - 1)):(i-1)]),
                       "No concern" = from_noconcern(x[((i-1)-(window - 1)):(i-1)]),
                       "SOC" = from_SOC(x[((i-1)-(window - 1)):(i-1)]))
    }
  }
  if(length(x) < window){
    for(i in length(x)){
      SOC[i] <- NA
    }
  }
  out <- ifelse(SOC == "SOC", TRUE, ifelse(SOC == "No concern", FALSE, NA))
  
  return(out)
}

# SOC status for different definitions of chronic inability
# N### naming convention is {misses_in}{makes_out}{window}
dat_SOC <- 
  rep_scenarios %>%
  mutate(data_trunc = map(data, function(x) x[x$sim > 0, c("sim", "N", "lb_goal", "ub_goal")]),
         age_length = map_dbl(age_mat, function(x) length(x))) %>%
  unnest(data_trunc) %>%
  select(scenario:age_mat, power, age_length, sim:ub_goal) %>%
  mutate(regime = ifelse(sim <= 100, "Historic", ifelse(sim >= 101, "Low", NA))) %>%
  rowwise() %>%
  filter(!(sim %in% 101:(100 + age_length * 6))) %>%
  group_by(scenario, rep) %>%
  mutate(
    roll5 = rollmean(N, k = 5, align = "right", fill = NA),
    SOC_roll5 = roll5 < lb_goal, #rolling mean to account for the size of the miss/make
    lb_N = N < lb_goal,
    SOC_N155 = get_SOC2(lb_N, 1, 5, 5), #most sensitive
    SOC_N445 = get_SOC2(lb_N, 4, 4, 5), #ADF&G most common
    SOC_N515 = get_SOC2(lb_N, 5, 1, 5)) %>% #least sensitive
  group_by(scenario, regime, rep) %>%
  mutate(
    mean_roll5 = mean(SOC_roll5, na.rm = TRUE),
    mean_N155 = mean(SOC_N155, na.rm = TRUE),
    mean_N445 = mean(SOC_N445, na.rm = TRUE),
    mean_N515 = mean(SOC_N515, na.rm = TRUE)) %>%
  group_by(scenario, rep)
```

Stock of concern listing and de-listing criteria were identified by the department as an issue that should be considered during EGPIT's review of the SSFP. The SSFP provides guidance on SOC listing and de-listing criteria relative the the definition of Chronic Inability which is defined in 5 AAC 39.222(f). We view this topic as technical because while the definition itself appears to be workable, interpretation by ADF&G staff have differed across division, regions and species. In general, ADF&G staff have considered missing an escapement goal for 3, 4, or 5 of the last 5 years as sufficiently chronic to recommend listing a stock as a SOC. De-listing criteria are also not standardized but I'll suggest the inverse of the listing criteria (making the escapement goal 3, 4, or 5 of the last 5 years while listed as a SOC) seems to be the default. In what follows I'll assume the most common criteria Department staff have used is recommending a stock is listed as a SOC listing when it has missed it's escapement goal for 4 of the last 5 years and recommending a stock is de-listed as a SOC when it has made it's escapement goal for 4 of the past 5 years.

### Methods

The intent with this analysis is to use simulated datasets to describe the characteristics of various listing and delisting criteria. Because the analysis is predicated on a simulation procedure which makes several assumptions about contemporary stock-recruit dynamics and environmental regimes, an outline of the analysis will be presented before providing detail regarding each step below.

-   Identify parameter ranges staff believe encompass most Alaska salmon stocks while assuming historical productivity and Ricker (non-depensatory) spawner-recruit dynamics.

-   Calculate parameter ranges while assuming reasonable levels of depensatory spawner-recruit dynamics that results in similar population dynamic behavior over the range of spawning abundances we have historically observed.

-   Identify fishery characteristics staff believe encompass most Alaska salmon fisheries.

-   Assume a reduction in productivity is the "concern" SOC listings are attempting to identify and calculate low-productivity parameter values for both non-depensatory and depensatory populations. Critically, this step makes non-depensatory populations sustainable while in low productivity and depensatory populations non-sustainable while in low productivity with the rate of decline related to the strength of depensation.

-   Simulate a time series of run sizes for all combinations of stock and fishery parameters under both the historical and low productivity regimes.

-   Identity criteria to assess chronic inability, apply those to run size time series during both historical and low productivity regimes, and compare the performance of each criteria.

It is important to note that the analysis presented herein assumes the EGPIT SOC recommendations are adopted. Most critically for this analysis is the recommendation that SOC listings be triggered by annual run sizes that miss the lower bound of a stock's escapement goal (rather than escapements). This change isolates biological issues from fishery management issues by focusing SOC listings on instances where there were insufficient fish available to make the lower bound of the stock's escapement goal[^8].

[^8]: Reasonable people could disagree on whether run size should be explicitly called out the the definition of chronic inability but that debate is left un-addressed herein.

#### Simulation Description

Non-depensatory dynamics are described by Ricker curves where the parameter space includes productivity $\textrm{log}(\alpha)$ of either $1$, $1.5$ and $2$, process error $\sigma$ of either $0.5$ or $0.8$, autocorrelation $\phi$ of either $0$, $0.4$ or $0.8$ and age at maturity of either:

-   $100\%~2$ years old

-   $5\%~3$ years old, $90\%~4$ years old and $5\%~5$ years old or

-   $10\%~3$ years old, $38\%~4$ years old, $30\%~5$ years old, $20\%~6$ years old, and $2\%~7$ years old

Complete expansion of these parameter combinations resulted in 54 different scenarios of non-depensatory spawner-recruit dynamics. There were 162 total scenarios of spawner-recruit dynamics after consideration of the depensatory dynamic spawner-recruit scenarios and 324 scenarios after consideration of 2 different percentages of MSY at the lower bound of the escapement goal.

For each simulated population a total of 207 years[^9] of spawner-recruit pairs were generated; 100 years during the historical productivity regime and up to 107 years under the low productivity regime. The first 7 spawner-recruit pairs from the low productivity regime in each simulated dataset were later discarded to allow for 1 generation of fish to mature before evaluating the performance of chronic inability criteria during the low productivity regime. This procedure resulted in two time series of spawner-recruit pairs per scenario and replicate, one from each productivity regime.

[^9]: Or until depensatory populations reached extinction.

#### Chronic Inability Criteria {#sec-soc-designations}

The time series of run sizes as described above allows us to test different criteria to evaluate chronic inability against the frequency of SOC designations under each criteria. There were 2 broad categories of chronic inability criteria considered. The first was consistent with traditional ADF&G usage where annual run sizes above and below the lower bound of the escapement goal were counted within a specified window to evaluate whether to list or de-list a stock as a SOC. In what follows the naming convention N### was used for this category of criteria where the first number is the number of times the annual run size needed to be below the lower bound of the escapement goal to list the stock as a SOC, the second number is the number of times the annual run size needed to be above the lower bound of the escapement goal to de-list the stock as a SOC, and the third number is the total number of years considered when making a SOC designation. The second category of chronic inability criteria was the use of a rolling average over the last x annual run sizes where each year the rolling average was compared to the lower bound of the escapement goal to decide whether to list or de-list a stock as a SOC. For this category the naming convention rollx was used. Rollx criteria are included to address a concerns that the binary N### does not weight the size of deviations above and below the lower bound of the escapement goal and may resulting in unnecessary SOC listings when small misses are paired with large makes, or vice versa.

### Results

Example run size time series are shown for 18 simulation scenarios in @fig-N. It is important to note that assumed stock-recruit and fishery parameters imply different population dynamics across values of $\gamma$ (depensatory dynamic strength) and the percent of MSY attainable at the lower bound of the escapement goal. While non-depensatory populations $\gamma = 1$ reach a stable equilibrium during the assumed level of low productivity, depensatory populations may lead to extinction during the assumed level of low productivity. This situation was intentional as it allows us to examine the sensitivity of chronic inability criteria across our current spawner-recruit dynamic assumptions (non-depensatory ) and alternative dynamics with harmful ramifications. Stocks appear to be most vulnerable when decompensatory dynamics are strong, the fishery is operated aggressively and/or when the stock matures in fewer age classes.

```{r}
#| echo: FALSE
#| warning: FALSE
#| message: FALSE
# example time series of run sizes
plot_ts <- 
  rep_scenarios %>%
  mutate(age_length = map_dbl(age_mat, function(x) length(x))) %>%
  mutate(data_trunc = map(data, function(x) x[x$sim > 0, c("sim", "N", "lb_goal", "ub_goal")])) %>%
  unnest(data_trunc) %>%
  select(scenario:age_mat, power, age_length:ub_goal) %>%
  filter(lnalpha_1 == 1.5, sigma == 0.5, phi == 0)
plot_ts_mean <- 
  plot_ts %>%
  group_by(scenario, gamma, pct_MSY, age_length, sim) %>%
  summarise(mean_N = mean(N))
plot_ts_goal <- 
  plot_ts %>% 
  group_by(gamma, pct_MSY, age_length) %>% 
  summarise(lb_goal = unique(lb_goal), 
            ub_goal = unique(ub_goal))
#Pinks
plot_ts1 <- plot_ts %>%
  filter(age_length == 1) %>%
  ggplot(aes(x = sim, y = N)) +
  geom_line(aes(group = rep), color = "grey") +
  geom_rect(data = plot_ts_goal[plot_ts_goal$age_length == 1, ], 
            aes(xmin = 0, xmax = Inf, ymin = lb_goal, ymax = ub_goal), 
            inherit.aes = FALSE, 
            alpha = .2,) +
  geom_line(data = plot_ts_mean[plot_ts_mean$age_length == 1, ], aes(y = mean_N)) +
  coord_cartesian(ylim = c(0, 35000)) +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma)) +
  theme_bw() +
  labs(x = "Simulation Year", 
       y = "Total Run", 
       title = paste0("ln(\u03B1)= ", 1.5, 
                      ", \u03C3= ", 0.5, 
                      ", \u03A6= ", 0,
                      ", p = ('2' = 1)"))
#Concentrated age-at-maturity
plot_ts3 <- plot_ts %>%
  filter(age_length == 3) %>%
  ggplot(aes(x = sim, y = N)) +
  geom_line(aes(group = rep), color = "grey") +
  geom_rect(data = plot_ts_goal[plot_ts_goal$age_length == 3, ], 
            aes(xmin = 0, xmax = Inf, ymin = lb_goal, ymax = ub_goal), 
            inherit.aes = FALSE, 
            alpha = .2,) +
  geom_line(data = plot_ts_mean[plot_ts_mean$age_length == 3, ], aes(y = mean_N)) +
  coord_cartesian(ylim = c(0, 35000)) +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma)) +
  theme_bw() +
  labs(x = "Simulation Year", 
       y = "Total Run", 
       title = paste0("ln(\u03B1)= ", 1.5, 
                      ", \u03C3= ", 0.5, 
                      ", \u03A6= ", 0,
                      ", p = ('3' = 0.05, '4' = 0.9, '5' = 0.05)"))
# "Healty age-at-maturity"
plot_ts5 <- plot_ts %>%
  filter(age_length == 5) %>%
  ggplot(aes(x = sim, y = N)) +
  geom_line(aes(group = rep), color = "grey") +
  geom_rect(data = plot_ts_goal[plot_ts_goal$age_length == 5, ], 
            aes(xmin = 0, xmax = Inf, ymin = lb_goal, ymax = ub_goal), 
            inherit.aes = FALSE, 
            alpha = .2,) +
  geom_line(data = plot_ts_mean[plot_ts_mean$age_length == 5, ], aes(y = mean_N)) +
  coord_cartesian(ylim = c(0, 35000)) +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma)) +
  theme_bw() +
  labs(x = "Simulation Year", 
       y = "Total Run", 
       title = paste0("ln(\u03B1)= ", 1.5, 
                      ", \u03C3= ", 0.5, 
                      ", \u03A6= ", 0,
                      ", p = ('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02)"))
```

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-N
#| fig.height: 6
#| fig.width: 10
#| fig.cap: "Time series of annual run sizes for 3 levels of depensation, two fishery (MSY) objectives at the lower bound of the escapement goal and 3 age-at-maturity vectors. Grey jagged lines are annual run sizes for each replicate simulated dataset while the black line is the mean run size during each simulate year. The horizontal grey box represents the escapement goal for each fishery."
#| layout-nrow: 3
#| fig-subcap: 
#|   - "age-at-maturity: (2 = 100%)"
#|   - "age-at-maturity: (3 = 5%, 4 = 90%, 5 = 5%)"
#|   - "age-at-maturity: (3 = 10%, 4 = 38%, 5 = 30%, 6 = 20%, 7 = 2%)"
plot_ts1
plot_ts3
plot_ts5
```

Four chronic inability criteria are applied to a time series of simulated data in @fig-criteria to give an idea of how each criteria functions. Criteria N445 is intended to closely approximate current department usage[^10] while criteria N155 and N515 are included to demonstrate the behavior of the most and least sensitive, respectively, criteria within the same category and window size. The roll5 criteria is included to demonstrate the behavior of the alternative category of chronic inability criteria with the same window size. The roll5 criteria seems to perform similarly to the N445 criteria overall although it is more responsive (quicker to indicate both listing and delisting a stock). The roll5 criteria can also lead to rapid oscillation between listing and delisting in some situations.

[^10]: Understanding the change to using annual run sizes rather than annual escapements.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-criteria
#| fig.height: 6
#| fig.width: 10
#| fig.cap: "Time series of annual run sizes and SOC status relative to 4 criteria for evaluating chronic inability. Each panel shows a different criteria for evaluating chronic inability. The naming convention Nxyz represents how many times the annual run size has to be below the lower bound of the escapement goal to be listed as a SOC (x), how many times annual run size has to be above the lower bound of the escapement goal to be de-listed as a SOC (y), and the number of years considered while making the determination (z). The naming convention roll5 represents a 5-year rolling average of total run size (green and red line). Annual run sizes are shown as the height of the bars and the SOC status during that year is indicated with the fill color of each bar. Bar heights can be compared to the horizontal black line which represents the lower bound of the escapement goal."


#demonstrate how each criteria works
dat_SOC %>%
  filter(lnalpha_1 == 1.5, sigma == 0.5, phi == 0, pct_MSY == 0.9, gamma == 1, age_length == 5, 
         regime == "Low", 
         rep == 25) %>%
  select(scenario, rep, lnalpha_1, sigma, gamma, pct_MSY, sim, N, lb_goal, ub_goal, starts_with("SOC"), roll5) %>%
  pivot_longer(starts_with("SOC"), 
               names_to = "criteria", 
               names_pattern =  "SOC_(.*)", 
               values_to = "SOC") %>%
  mutate(roll5 = ifelse(criteria == "roll5", roll5, NA)) %>%
  filter(sim >= (161) & sim <= 213) %>%
  arrange(criteria) %>% # WARNING: needed for the coloration of the roll 5 line to lean the bars 
  ggplot(aes(x = as.character(sim), y = N, fill = SOC)) +
  geom_bar(stat = "identity", alpha = 0.5) +
  geom_hline(aes(yintercept = lb_goal)) + #geom_hline(aes(yintercept = ub_goal)) +
  geom_line(aes(y = roll5, group = 1, color = as.numeric(lead(SOC))),
            linewidth = 2,
            show.legend = FALSE) +
  scale_color_gradient(low = col[1], high = col[2]) +
  scale_fill_manual(values = col) +
  facet_grid(criteria ~ .) +
  scale_x_discrete(breaks = seq(165, 210, 5)) +
  labs(x = "Simulation Year", 
       y = "Total Run", 
       fill = "Stock of Concern?", 
       title = paste0("ln(\u03B1)= ", 1.5, 
                      ", \u03C3= ", 0.5, 
                      ", \u03B3= ", 1, 
                      ", \u03A6= ", 0, 
                      ", %MSY= ", 90,
                      ", p = ('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02)"))
```

The ideal criteria to use while evaluating chronic inability would never be triggered if the stock-recruit data was generated during a high productivity regime and would always be triggered if the stock-recruit data was generated during a low productivity regime. @fig-Ha shows that while all of the chronic inability criteria considered were negligibly triggered by data from the high productivity regime most also were also triggered less than half of the time by data from the low productivity regime when non-depensatory spawner-recruit dynamics are assumed. This includes the N445 criteria which triggers on stock-recruit data from the low productivity regime only \~37% of the time when non-depensatory spawner-recruit dynamics are assumed. While that seems poor, note that data generated by depensatory spawner-recruit relationships trigger much more often. Because depensatory dynamics are associated with harmful outcomes this behavior is desirable.

Interpretation of this result should be considered by multiple ADF&G staff but at a minimum I'd suggest it implies that all of these criteria are not a particularly powerful indicator of reduced productivity regimes and when any criteria indicates a stock should be listed as a SOC the department would be wise to do so with little hesitation.

The N445 criteria and the roll5 criteria are very similar overall. Careful examination of the performance of the two criteria indicates that when they differ roll5 may be slightly better at indicating a stock should be listed as a SOC during years with the lowest abundance (@fig-criteria). That said, the rolling average criteria requires run size estimates and will be problematic for stocks where run size cannot be estimated. The same stocks present similar difficulties for the N445 criteria (when evaluated against annual run size) but since the counting criteria only require ordinal data the information will be easier for ADF&G staff to approximate.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-Ha
#| fig.height: 6
#| fig.width: 10
#| fig.cap: "Percent of simulated years classified as a SOC relative to the productivity regime assumed for several chronic inability criteria. One can imagine these results as a scientific hypotheses test where the null hypotheses is that the stock-recruit data was generated during the historical productivity regime. Then the median values for the historical productivity regime represents the Type I error rate (false positive) while the median values for the low productivity regime represents the power of the test."


# demonstrate regime and SOC entry/exit criteria differences for one group of scenarios
# Hypothesis test for 445
# NULL: High productivity
# false positives (Look at historical regime): non-existent, i.e. alpha = 0
# false negatives  (Look at Low regime): 
#     gamma=1: Fail to reject Null often, beta ~ .65,  
#     gamma>1: Reject null occasionally in "safest" situation, beta < .25
# Entry/Exit criteria: would need a very sensitive test to get high power w Ricker 
dat_SOC %>%
  filter(lnalpha_1 == 1.5, sigma == 0.5, age_length == 5) %>%
  pivot_longer(dplyr::starts_with("mean_"), 
               names_to = "Chronic_I",
               names_pattern = "mean_(.*)",
               values_to = "pct_SOC") %>%
  ggplot(aes(x = Chronic_I, y  = pct_SOC, color = regime)) + 
  geom_boxplot() +
  scale_color_discrete(name = "Regime", 
                     labels = c("historical" = "historical", "Low" = "Low")) +
  labs(title = paste0("ln(\u03B1): ", 1.5, 
                      ", \u03C3: ", 0.5,
                      ", p = ('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02)"),
       x = "Chronic Inability Criteria",
       y = "Probability") +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma))
```

Note that @fig-Ha shows probabilities for a subset of the spawner-recruit parameters considered. @fig-sensitivity shows the sensitivity of our results to variations in productivity $ln(\alpha)$, process error $\sigma$, auto-correlation $\phi$ and age-at-maturity. In general @fig-sensitivity appears to confirm the patterns seen in @fig-Ha although SOC criteria appear to be more sensitive when process error or the number of age classes decrease. The top right hand corner of both figures should be taken with a grain of salt as simulations quickly when to extinction in that scenario which meant there were limited numbers of stable time series to use to demonstrate the behavior of SOC criteria.

```{r}
#| echo: FALSE
#| warning: FALSE
# Look for sensitivity wrt 445 and roll5
# pct_MSY, lnalpha and gamma
# increasing lnalpha decreases sensitivity w depensatory dynamics
lnalpha <-
  dat_SOC %>%
  filter(regime == "Low", phi == 0, sigma == 0.5, age_length == 5) %>%
  pivot_longer(dplyr::starts_with("mean_"), 
               names_to = "Chronic_I", 
               names_pattern = "mean_(.*)",
               values_to = "pct_SOC") %>%
  filter(Chronic_I %in% c("N445", "roll5")) %>%
  ggplot(aes(x = Chronic_I, y  = pct_SOC, color = as.character(lnalpha_1))) + 
  geom_boxplot() +
  labs(title = paste0("\u03C3: ", 0.5,
                      ", phi: ", 0,
                      ", p = ('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02)"),
       color = "Productivity: ln(\u03B1)",
       x = "Chronic Inability Criteria",
       y = "Probability") +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma))

# Look for sensitivity wrt 445 and roll5
# pct_MSY, sigma and gamma
# increased sigma decreases sensitivity
sigma <- 
  dat_SOC %>%
  filter(regime == "Low", phi == 0, lnalpha_1 == 1.5, age_length == 5) %>%
  pivot_longer(dplyr::starts_with("mean_"), 
               names_to = "Chronic_I", 
               names_pattern = "mean_(.*)",
               values_to = "pct_SOC") %>%
  filter(Chronic_I %in% c("N445", "roll5")) %>%
  ggplot(aes(x = Chronic_I, y  = pct_SOC, color = as.character(sigma))) + 
  geom_boxplot() +
  labs(title = paste0("ln(\u03B1): ", 1.5,
                      ", phi: ", 0,
                      ", p = ('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02)"), 
       color = "process error: \u03C3",
       x = "Chronic Inability Criteria",
       y = "Probability") +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma))

# Look for sensitivity wrt 445 and roll5 across SR parameter combinations
# pct_MSY, phi and gamma
# phi has little effect
phi <- 
  dat_SOC %>%
  filter(regime == "Low", sigma == 0.5, lnalpha_1 == 1.5, age_length == 5) %>%
  pivot_longer(dplyr::starts_with("mean_"), 
               names_to = "Chronic_I", 
               names_pattern = "mean_(.*)",
               values_to = "pct_SOC") %>%
  filter(Chronic_I %in% c("N445", "roll5")) %>%
  ggplot(aes(x = Chronic_I, y  = pct_SOC, color = as.character(phi))) + 
  geom_boxplot() +
  labs(title = paste0("ln(\u03B1): ", 1.5, 
                      ", \u03C3: ", 0.5,
                      ", p = ('3' = 0.1, '4' = 0.38, '5' = 0.3, '6' = 0.2, '7' = 0.02)"),
       color = "Autocorrelation: \u03A6",
       x = "Chronic Inability Criteria",
       y = "Probability") +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma))

# age-at-maturity: less robust vectors more sensitive
age <- 
  dat_SOC %>%
  filter(regime == "Low", sigma == 0.5, phi == 0, lnalpha_1 == 1.5) %>%
  pivot_longer(dplyr::starts_with("mean_"), 
               names_to = "Chronic_I", 
               names_pattern = "mean_(.*)",
               values_to = "pct_SOC") %>%
  filter(Chronic_I %in% c("N445", "roll5")) %>%
  ggplot(aes(x = Chronic_I, y  = pct_SOC, color = as.character(age_mat))) + 
  geom_boxplot() +
  labs(title = paste0("ln(\u03B1): ", 1.5,
                      ", \u03C3: ", 0.5,
                      ", phi: ", 0), 
       color = "age-at-maturity: p",
       x = "Chronic Inability Criteria",
       y = "Probability") +
  facet_grid(paste0("%MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma))
```

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-sensitivity
#| fig.height: 6
#| fig.width: 10
#| fig.cap: "Sensitivity of the N445 and roll5 chronic inability criteria to variation in assumed productivity (ln(\u03B1)), process error (\u03C3), autocorrelation (\u03A6), and age-at-maturity (p). The probabilities shown represent only simulated data generated under low productivity assumptions."
#| layout-nrow: 4
#| fig-subcap: 
#|   - "Productivity (ln(\u03B1))"
#|   - "Process error (\u03C3)"
#|   - "Autocorrelation (\u03A6)"
#|   - "Age-at-maturity (p)"
lnalpha
sigma
phi
age
```

## Sustainable Escapement Threshold (SET) {#sec-SET}

Both the current and revised SOC process requires a sustainable escapement threshold (SET) to be determined before a stock can be identified as a conservation concern (see @nte-levels). In contrast to a escapement goal, where managers are compelled to distribute escapements within the escapement goal range, a SET represents a limit reference point that managers should strive to remain above.

ADF&G lacks a procedure to estimate SETs and has never made an SET finding or a stock of conservation concern recommendation. Because the definition implies SETs are associated with low spawning abundance levels which fail to replace themselves conventional wisdom holds that we will remain unable to estimate an SET until we observe recruitments from spawning events well below the lower bound of escapement goals. While this recruitment information is still unavailable we are starting to observe the requisite spawning abundances.

In this document we suggest that identifying SETs when stocks enter into the SOC process is not only possible, but also prudent, because it satisfies the precautionary management directive located in 5 AAC 39.222(c)(5)(A). That said there are real statistical challenges with the timing and availability of the empirical data needed to make SET estimates. One way to mitigate those concerns would be a procedure that marries empirical information to stock-recruit theory. Besides timeliness, introducing theoretical information into the estimation procedure also mitigates other issues with relying empirical data alone such as inconsistent application of SETs and sensitivity to escapement goal lower bounds and fishery trends.

Herein, I present a analytical procedure for estimating SETs for Alaskan salmon when spawner-recruit data is available and use simulation to explore the robustness and reliability of the proposed technique. This procedure is designed to be implemented when run sizes are failing to meet the escapement goal, to be complementary to ADF&G's existing stock assessment techniques, and to be responsive to spawner-recruit data as it becomes available. It is also intended to be precautionary when empirical observations are lacking. Finally, these results lay the foundation for an SET approximation when spawner-recruit data is lacking.

### Methods

The intent with this analysis is to use simulated datasets to describe the behavior of the peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve as an approximation for the SET. Because the analysis is predicated on a simulation procedure which makes several assumptions about contemporary stock-recruit dynamics and environmental regimes, an outline of the analysis will be presented before providing detail regarding each step below.

-   Identify parameter ranges staff believe encompass most Alaska salmon stocks while assuming historical productivity and Ricker (non-depensatory) spawner-recruit dynamics.

-   Calculate parameter ranges while assuming reasonable levels of depensatory spawner-recruit dynamics that results in similar population dynamic behavior over the range of spawning abundances we have historically observed.

-   Identify fishery characteristics staff believe encompass most Alaska salmon fisheries.

-   Simulate a time series of run sizes for all combinations of stock and fishery parameters under both the historical and low productivity regimes.

-   Estimate an SET for each simulated dataset after the annual run size for the stock has failed to exceed the lower bound of the escapement goal for 4 of the last 5 years.

#### Simulation Description

Non-depensatory dynamics are described by Ricker curves where the parameter space includes productivity $\textrm{log}(\alpha)$ of either $1$, $1.5$ and $2$ and process error $\sigma$ of either $0.25$ or $0.5$ resulting in 6 different scenarios of non-depensatory spawner-recruit dynamics. There were 18 total scenarios of spawner-recruit dynamics after consideration of the depensatory dynamic spawner-recruit scenarios and 36 scenarios after consideration of 2 different percentages of MSY at the lower bound of the escapement goal.

All simulated datasets included age-at-maturity of $10\%~3$ years old, $38\%~4$ years old, $30\%~5$ years old, $20\%~6$ years old, and $2\%~7$ years old, process $\sigma_F$ and observation $\sigma_N$ error or 0.2. Fishing power was a function of the productivity of the population and set to $30\%$, $55\%$ and $80\%$ for stocks with non-depensatory productivity of $1$, $1.5$ and $2$ respectively.

The simulation model used for this exercise is described in @sec-sim_model. We simulated 50 replicate datasets for each of the 36 combinations of spawner-recruit parameters and fishery characteristics. Each simulated dataset was 50 years long with historical productivity values used for the first 20 years and reduced productivity values used for the last 30 years.

#### Analysis Description {#sec-analysis}

Because our interest is in recovering SET estimates from simulated datasets we truncated each simulated dataset after the **total run size**[^11] (N) had failed to exceed the lower bound of the escapement goal in 4 of the previous 5 years. Simulated populations that never met that criteria were removed from the analysis.

[^11]: Note that this SOC listing criteria is consistent with the SOC SSFP review team's recommendation but inconsistent with current policy (which may list sooner if harvest results in escapements below the lower end of the goal range when run size was sufficient to exceed lower end of the goal range).

The model assumes stock dynamics are governed by a gamma spawner-recruit equation that describes, relative to brood year $c$, the number of fish expected to return $R_c$ given the number of fish in the spawning escapement $S_c$. We model this relationship as per capita production $\frac{R_c}{S_c}$ on the logarithmic scale:

$$ \textrm{log}\left (\frac{R_c}{S_c}\right )~=~\textrm{log}(\alpha_r)~+~(\gamma_r-1) S_{c}~-~\beta_r S_{c} $$

where $\alpha_r$ is a measure of productivity, $\beta_r$ is a measure of compensatory density dependence, $\gamma_r$ is a measure of depensatory density dependence and $r$ is an index which indicates regime affiliation. The peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve is an estimate of the SET and located at $\frac{\gamma_2 - 1}{\beta_2}$.

It's unlikely we would be discussing an SET if the stock was not in a period of reduced productivity. We explicitly include 2 productivity regimes where $y_c$ is the brood year cutoff between the high and low productivity regimes and the index $r$ is set equal to $\lambda_c = I(c - y_c)$ which is an indicator variable equal to 1 when $c - y_c\lt0$ and 2 when $c-y_c\geq0$. Within each regime, productivity varies among brood years, fluctuating around a central tendency. Time-varying productivity often manifests as serially correlated model residuals, so a lognormal error term with a lag of 1 year was included in the linearized form of the S-R relationship to represent realized recruitment.

$$  \textrm{log}\left (\frac{R_c}{S_c}\right )~=~\textrm{log}(\alpha_r)~+~(\gamma_r-1) S_{c}~-~\beta_r S_{c} +\phi \nu_{(c-1)}+\epsilon_{W} $$

where $\phi$ is the lag-1 serial correlation coefficient, $\nu_{c}$ are model residuals defined as

$$ \nu_{c}~=~\textrm{log}\left (\frac{R_c}{S_c}\right )~-~[ \textrm{log}(\alpha_r)~+~(\gamma_r-1) S_{c}~-~\beta_r S_{c}]$$

and the $\epsilon_{W}$ are independently and normally distributed process errors with "white noise" variance $\sigma^2_{W}$.

Prior distributions for this model were set to enforce an order to regime affiliation (1 = high productivity, 2 = low productivity) and minimize the estimation burden relative the the likely information available from each regime. The prior distributions for the productivity parameter during the high productivity regime were set on the log scale where $\textrm{log}(\alpha_1)\sim\textrm{uniform}(-4, 4)$. The productivity parameter during the low productivity regime $\textrm{log}(\alpha_2)$ was estimated based on the algebraic relations between it and other estimated parameters:

$$ \textrm{log}(\alpha_2) = scale - \gamma_2~*~\left(\textrm{log}\left(\frac{1}{\beta_1}\right)~-~1\right) $$

where $scale = \textrm{log}\left(Rmax_{2}\right) \sim \textrm{uniform}(1,15)$. The prior distribution for the compensatory density-dependent parameter during the high productivity regime was $\beta_1\sim\textrm{half-normal}(0, 1)$ while during the low productivity regime compensatory density dependence was estimated using the algebraic relationship between it and other estimated parameters $\beta_{2}~=~ \beta_{1}\gamma_2$. Depensatory density-dependence was assumed during the high productivity regime $\gamma_1=1$ while during the low productivity regime the prior distribution was uniform with a constrained support $\gamma_2\sim\textrm{uniform}(1, 2)$[^12]. The prior distribution for the regime cutoff was $y_d\sim\textrm{uniform}(10,30)$.

[^12]: Note this support is mildly informative. My contention is that the true value of gamma is certainly between 1 and 2 and that this prior is precautionary because it produces posterior estimates of the SET which assume depensation when non-informative data is available. That said, the prior mean is 1.5 which could be reasonably argued to be and assumption of strong depensation in the absence of data. If this procedure is adopted careful consideration should be given to this prior.

### Results {#sec-results}

@fig-SOC shows the simulation year when the SOC listing criteria (N \< lower escapement goal bound for 4 of the last 5 years) were met for each simulated population. Non-depensatory populations were slow to meet the criteria with a majority of the simulated populations failing to meet the criteria. Depensatory populations met the criteria sooner, had definitive modes to the distribution, and mostly met the criteria before the end of the time series.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-SOC
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Timing of SOC findings for each simulated population in this study."  
rep_scenarios_gp %>%
  ggplot(aes(x = yr_SOC,
             pattern = as.character(sigma),
             fill = as.character(lnalpha_1))) +
  geom_bar_pattern(color = "black",
                   pattern_fill = "black",
                   pattern_angle = 45,
                   pattern_density = 0.1,
                   pattern_spacing = 0.025,
                   pattern_key_scale_factor = 0.6) +
  scale_pattern_manual(values = c('0.25' = "stripe", '0.5' = "none")) +
  guides(pattern = guide_legend(override.aes = list(fill = "white")),
         fill = guide_legend(override.aes = list(pattern = "none"))) +
  labs(x = "Year of SOC Designation",
       y = "Number of Simulations",
       fill = paste0("log(\u03B1)"),
       pattern = "\u03B4") +    
  facet_grid(paste0("\u03B3: ", gamma) ~ paste0("%MSY @ lb: ", pct_MSY)) 
```

```{r}
#| echo: FALSE
#| warning: FALSE
plot_fit <- function(scenario_file, ...){
  filters <- enquos(...)
  
  data0 <-
    scenario_file %>%
    filter(!!!filters)

  rep_var = sample(unique(data0$rep), 1, replace = FALSE)

  data <-
    data0 %>%
    filter(rep == rep_var)
  
  maxS <- round(max(data$data_jags[[1]]$S), -2)

  true <-
    data %>%
    select(scenario, rep, a_1, a_2, b, gamma, lb, ub) %>%
    mutate(set = (gamma - 1)/ b)

  estimates <-
    data %>%
    select(scenario, rep, mod_gamma) %>%
    mutate(a_1 = map_dbl(mod_gamma, ~exp(.$q50$lnalpha[1])),
           a_2 = map_dbl(mod_gamma, ~exp(.$q50$lnalpha[2])),
           b_1 = map_dbl(mod_gamma, ~.$q50$beta[1]),
           b_2 = map_dbl(mod_gamma, ~.$q50$beta[2]),
           gamma_1 = map_dbl(mod_gamma, ~.$q50$gamma[1]),
           gamma_2 = map_dbl(mod_gamma, ~.$q50$gamma[2]),
           set = (gamma_2 - 1) / b_2)

  plot1 <-
    data %>%
    mutate(lnRS = map(data_jags, function(x) data.frame(year = 1:x$nyrs, lnRS = x$lnRS, S = x$S)),
           cut = map_dbl(mod_gamma, ~.$q50$y_d)) %>%
    select(scenario, rep, a_1, a_2, b, gamma, lb, ub, cut, lnRS) %>%
    unnest(lnRS) %>%
    mutate(regime = ifelse(year <= cut, "normal", "reduced")) %>%
    ggplot(aes(x = S, y = lnRS)) +
    geom_point(aes(color = regime)) +
    geom_vline(data = true, aes(xintercept = set), color = "red") +
    geom_vline(data = estimates, aes(xintercept = set), linetype = 2, color = "red") +
    geom_rect(data = true, aes(xmin = lb, xmax = ub, ymin = -Inf, ymax = Inf),
              inherit.aes = FALSE,
              alpha= .25) +
    geom_function(fun = function(x) log(SRgamma(true$a_1, true$b, true$gamma, x) / x) ,
                  color = "black") +
    geom_function(fun = function(x) log(SRgamma(true$a_2, true$b, true$gamma, x) / x),
                  color = "red") +
    geom_function(fun = function(x) log(SRgamma(estimates$a_1, estimates$b_1, estimates$gamma_1, x) / x),
                  color = "black",
                  linetype = 2) +
    geom_function(fun = function(x) log(SRgamma(estimates$a_2, estimates$b_2, estimates$gamma_2, x) / x),
                  col = "red",
                  linetype = 2) +
    scale_color_manual(values = c("black", "red")) +
    scale_x_continuous(limits = c(0, 1.1 * maxS)) +
    theme_bw()

  plot2 <-
    data %>%
    mutate(S = map(data_jags, function(x) data.frame(year = 1:x$nyrs, S = x$S)),
           cut = map_dbl(mod_gamma, ~.$q50$y_d)) %>%
    unnest(S) %>%
    mutate(regime = ifelse(year <= cut, "normal", "reduced")) %>%
    select(scenario, rep, year, b, gamma, lb, regime, S) %>%
    mutate(set = (gamma - 1)/ b) %>%
    ggplot(aes(x = year, y = S)) +
    geom_line() +
    geom_point(aes(color = regime)) +
    geom_hline(data = true, aes(yintercept = set), color = "red") +
    geom_hline(data = estimates, aes(yintercept = set), linetype = 2, color = "red") +
    geom_rect(data = true, aes(ymin = lb, ymax = ub, xmin = -Inf, xmax = Inf),
              inherit.aes = FALSE,
              alpha= .25) +
    scale_color_manual(values = c("black", "red")) +
    scale_y_continuous(limits = c(0, 1.1 * maxS)) +
    theme_bw() +
    labs(caption = paste0(data$scenario, ", ", data$rep))
  ggarrange(plot1, plot2, nrow = 2, heights = c(6,4))

}
```

#### Analysis examples (depensatory dynamics present)

Three examples of simulated datasets and their resultant estimates when $ln(\alpha) = 1.5$, $\sigma = 0.5$, $\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$ are presented in this section to give the reader an idea of the variability associated with estimating an SET. @fig-median1.3 shows a randomly selected dataset with a estimated SET that was between the 40th and 60th percentile of all SET estimates for the parameter combination and demonstrates that this procedure provides a reasonable approximation of the SET implied by the spawner-recruit assumptions.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-median1.3
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the datasets that resulted in an SET estimate **between the 40th and 60th percentiles** of the SETs estimated for this parameter combination. In the top panel, solid lines represent the true spawner-recruit relationships and SET while dashed lines show the estimated spawner-recruit relationships and SET. In the bottom panel, the solid and dashed straight lines show the true and estimated SETs, respectively."

rep_scenarios_gp %>%
  filter(set_est > set_estq40 & set_est < set_estq60) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1.3,
           pct_MSY == 0.9)
```

@fig-low1.3 shows a randomly selected dataset with a estimated SET that was in the lowest 10% of all 50 estimates and demonstrates the estimation routine's response to poor evidence for depensatory dynamics (even when they exists).

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-low1.3
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the datasets that resulted in the **lowest 10%** of the SETs estimated for this parameter combination.  In the top panel, solid lines represent the true spawner-recruit relationships and SET while dashed lines show the estimated spawner-recruit relationships and SET. In the bottom panel, the solid and dashed straight lines show the true and estimated SETs, respectively."

rep_scenarios_gp %>%
  filter(set_est < set_estq10) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1.3,
           pct_MSY == 0.9)
```

@fig-high1.3 shows a randomly selected dataset with a estimated SET that was in the highest 10% of all 50 estimates and demonstrates the estimation routine's response to either large evidence for depensatory dynamics or poor information about compensatory density dependence (which drive the SET estimate towards higher escapements artificially).

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-high1.3
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1.3$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the datasets that resulted in the **highest 10 %** of the SETs estimated for this parameter combination.  In the top panel, solid lines represent the true spawner-recruit relationships and SET while dashed lines show the estimated spawner-recruit relationships and SET. In the bottom panel, the solid and dashed straight lines show the true and estimated SETs, respectively."

rep_scenarios_gp %>%
  filter(set_est > set_estq90) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1.3,
           pct_MSY == 0.9)
```

#### Analysis examples (depensatory dynamics absent)

Three examples of the simulated dataset and resultant estimates when $ln(\alpha) = 1.5$, $\sigma = 0.5$, $\gamma = 1$, and $pct_{MSY} @ lb = 0.9$ are presented in this section to give the reader an idea of the variability associated with estimating an SET when the data generating mechanism is non-depensatory. @fig-median1 shows a randomly selected dataset with a estimated SET that was between the 40th and 60th percentile of all of the SET estimates and demonstrates that using this procedure the SET is set much lower than the lower bound of the escapement goal.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-median1
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the datasets that resulted in an SET estimate **between the 40th and 60th percentiles** of the SETs estimated for this parameter combination.  In the top panel, solid lines represent the true spawner-recruit relationships and SET while dashed lines show the estimated spawner-recruit relationships and SET. In the bottom panel, the solid and dashed straight lines show the true and estimated SETs, respectively."

rep_scenarios_gp %>%
  filter(set_est > set_estq40 & set_est < set_estq60) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1,
           pct_MSY == 0.9)
```

@fig-low1 shows a randomly selected dataset with a estimated SET that was one of the lowest 10% of all 50 estimates and demonstrates the estimated SET can be set quite low when there are few poorly performing spawner-recruit pairs associated with the lowest observed abundances.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-low1
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the datasets that resulted in the **lowest 10%** of the SETs estimated for this parameter combination. In the top panel, solid lines represent the true spawner-recruit relationships and SET while dashed lines show the estimated spawner-recruit relationships and SET. In the bottom panel, the solid and dashed straight lines show the true and estimated SETs, respectively."

rep_scenarios_gp %>%
  filter(set_est < set_estq10) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1,
           pct_MSY == 0.9)
```

@fig-high1 shows a randomly selected dataset with a estimated SET that was one of the highest 10% of all 50 estimates and demonstrates the estimation routine is sensitive to poor estimates of compensatory density dependence or poorly returns associated with the lowest observed escapements both of which drive the SET towards higher escapements artificially.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-high1
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "One randomly selected simulated dataset and the estimated SR relationships and implied SET when $ln(\\alpha) = 1.5$, $\\sigma = 0.5$, $\\gamma = 1$, and $pct_{MSY} @ lb = 0.9$. This example shows one of the datasets that resulted in the **highest 10 %** of the SETs estimated for this parameter combination. In the top panel, solid lines represent the true spawner-recruit relationships and SET while dashed lines show the estimated spawner-recruit relationships and SET. In the bottom panel, the solid and dashed straight lines show the true and estimated SETs, respectively."

rep_scenarios_gp %>%
  filter(set_est > set_estq90) %>%
  plot_fit(lnalpha_1 == 1.5,
           sigma == .5,
           gamma == 1,
           pct_MSY == 0.9)
```

#### Synthesis

One way to view these results is to look at the distribution of median SET estimates (@fig-set) for each spawner-recruit scenario in @tbl-SET_scenarios. The SET was estimated with reasonable fidelity particularly when the lower bound of the escapement goal was set at an escapement that produced 50% of MSY. When the lower bound of the escapement goal as set at an escapement that produced 90% of MSY the estimation routine tended to overestimate when $\gamma = 1.3$ and underestimate when $\gamma=1.6$. I suspect these biases are driven by insufficient low escapements and the mean of the prior distribution of $\gamma$. When a non-depensatory model was used to generate the data, the estimation procedure assumes some model-based depensatory dynamics to estimate a SET which is greater than 0 but generally smaller than those estimated when depensatory dynamics were included in the simulation model.

```{r}
#| echo: FALSE
#| warning: FALSE
#| label: fig-set
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The distribution of median SET estimates (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory) for 50 datasets generated for each spawner-recruit scenario. The vertical black line shows the SET estimate based on the simulation model while the numbers above each panel refer to the spawner-recruit and fishery parameter combinations used in this simulation study @tbl-SET_scenarios."

rep_scenarios_gp %>%
  select(scenario, rep, lnalpha_1, lnalpha_2, beta, sigma, gamma, a_1, a_2, b, pct_lb, pct_MSY, lb, set_est) %>%
  mutate(set = (gamma - 1) / b) %>%
  ggplot(aes(x = as.character(sigma), y = set_est, color = as.character(lnalpha_1), group = scenario)) +
  geom_boxplot() +
  geom_hline(aes(yintercept = set)) +
  #geom_point(aes(y = lb), shape = 8, color = "red") +
  labs(color = "log(\u03B1)",
       x = paste0("Process error (\u03B4)"),
       y = "Median SET estimate") +
  facet_grid(paste0("% of MSY: ", pct_MSY) ~ paste0("\u03B3: ", gamma),
             scales = "free_x")
```

# Appendices

## Appendix A: Gamma Spawner-Recruit Relationship

### Theoretical Support {#sec-theory}

Fishery managers rely on reference points to manage fisheries and reference points can be broken into two categories:

-   Target reference points which are designed to achieve a fishery objective e.g. $S_{msy}$ and escapement goal boundaries to maximize sustained yield.
-   Limit reference point which are designed to avoid stock sizes which may be harmful to stock sustainability e.e SET to avoid declining per capita production.

During times of historical abundance fishery managers use target reference points to manage the fishery with an objective of maximizing sustained yield. In Alaskan salmon fisheries, target reference points have been estimated using the Ricker spawner-recruit relationship almost exclusively. Under the SOC policy recommendations outlined above (@sec-recs) stocks entering the SOC process will be limited to those experiencing large declines in biological production and is characterized by a transition from managing to achieve fishery objectives to managing to achieve conservation objectives. Several other changes are implied with this objective change (@tbl-transition). Firstly, the transition implies target reference points (the escapement goal range) described in the stocks management plan should be replaced with limit reference points described in the stock's recovery plan. Secondly, non-depensatory (compensatory) dynamics which are important while estimating escapement goal ranges are less important when estimating limit reference points. While depensatory population dynamics are not required to make a theoretical connection between a limit reference point and the spawner-recruit model (e.g. $S_{gen}$) they are required to directly model the SET as defined in the SSFP.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: tbl-transition
#| tbl-cap: "Fishery management and stock assessment changes associated with transitioning into the SOC process."
data.frame(catagory = c("Productivity Regime", "Management Objective", "Management Guidance", "Reference Point","Population Dynamics","Spawner-Recruit Relationship"),
           normal = c("historical", "sustained yield", "management plan", "EG range", "non-depensatory", "Ricker"),
           soc = c("reduced", "conservation", " recovery plan", "EG lower bound & SET", "depensatory", "gamma")) %>%
  flextable() %>%
  set_header_labels(catagory = "Catagory", normal = "Not a SOC", soc = "SOC") %>%
  add_header_row(values = c("", "Management Regime"), colwidths = c(1, 2)) %>%
  bold(part = "header") %>%
  align(j = 2:3, align = "right", part = "header") %>%
  align(j = 2:3, align = "right", part = "body") %>%
  align(i = 1, align = "center", part = "header") %>%
  hline(i = 1, j = 1, part = "header", border = fp_border_default(width = 0)) %>%
  footnote(i = 4, j = 1, part = "body", value = as_paragraph(c("EG = escapement goal"))) %>%
  autofit() 
```

While the Ricker spawner-recruit relationship has effectively estimated target reference points for decades it is ill-suited for identifying limit reference points required for fisheries conservation because it fails to acknowledge any reduction in productivity associated with small spawning abundances (i.e. it is non-depensatory). This limitation is clearly shown in @fig-gamma (bottom panel). Many management agencies have avoided this issue by using a heuristic approach to identify limit reference points which are some fraction of the stock's target reference point (e.g. 50% of the escapement goal lower bound or 50% of the escapement goal midpoint). While this approach is simple and calibrated to stakeholder expectations it has shortcomings. For example, while escapement goal bounds are derived from spawner-recruit relationships they also include accommodations for biological and management issues specific to each salmon stock. These issues, while consistent with maximizing sustained yield, may not be consistent with stock conservation and therfore may not provide appropriate protection for all stocks.

An alternative is to conduct stock assessments when managing for stock conservation with a spawner-recruit model that includes the depensatory dynamics fishery managers wish to avoid. One issue with this approach is timing: managers need to observe spawning abundances below the limit reference point in order to know where to set the limit reference point. The issue of timing is included in the analysis in @sec-SET in two ways. First, our statistical analysis of simulated datasets occurs immediately after the run size time series for each simulated stock satisfies SOC listing criteria making our analysis relevant to the required task. Second, Bayesian statistical analysis is used allowing prior information to be included in the stock assessment. With respect to depensatory population dynamics fisheries literature has largely stalled out on the issue of proving that depensatory dynamics exist. Herein we suggest this is the wrong approach. Precautionary management suggest a better approach would be to assume depensatory spawner-recruit dynamics exist and use empirical data to modify this assumption as appropriate.

A second issue with including depensatory dynamics in the spawner-recruit model is that depensatory dynamics require a third parameter. That said, an interesting symmetry exists when considering population dynamics under each productivity and management regime. Under historical productivity compensatory dynamic parameters (\beta) are estimable and depensatory dynamic parameters (\gamma) are not. This is fortunate because compensatory dynamics have proven themselves important for maximizing sustained yield. In contrast, under reduced productivity compensatory dynamic parameters are not estimable while depensatory parameters may be. Again, this is fortunate because depensatory dynamics are important to avoid for conservation reasons. In this sense the issue with 3 parameter spawner-recruit models is not that we cannot estimate all 3 parameters but that we can't estimate 3 parameters at the same time. The analysis suggested herein (@sec-analysis) acknowledges this issue and accommodates it.

### Reference Points

#### SET {#sec-refSET}

In this document we will explore using the peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve as an approximation for the SET (see @fig-gamma, bottom panel) . The peak of the curve can be found using calculus and is located at $\frac{(\gamma-1)}{\beta}$ when $\gamma \ge 1$. Is this suggestion consistent with the definition of the SET found in the SSFP? The definition indicates that the SET should be set at a level below which "... ability of the salmon stock to sustain itself is jeopardized:...[^13]". Because the peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve represents the largest per capita production possible for the stock we contend it does satisfy this part of the definition.

[^13]: The addendum to this statement, "...in practice, an SET can be estimated based on lower ranges of historical escapement levels, for which the salmon stock has consistently demonstrated the ability to sustain itself..." has limited utility because precautionary fishery management should be responsive to abundance trends as they occur, instead of waiting for salmon to mature and return from the ocean before being determinative. Our analysis avoids this limitation as discussed in @sec-theory.

The last part of the SET definition "...the SET is lower than the lower bound of the BEG and lower than the lower bound of the SEG..." concerns the relationship between the lower bound of the escapement goal and the SET. @fig-setlb1 shows the relationship between the peak of the $\textrm{log}\left(\frac{R}{S}\right)$ curve and the lower bound of possible escapement goals for a single stock with varied levels of depensatory dynamics. Since ADF&G currently assumes non-depensatory dynamics for all salmon stocks, the goal ranges and SETs shown in the top row of @fig-setlb1 would be in use prior to a SOC listing. Comparing those escapement goal lower bounds (left hand side of green boxes in the top row) to possible SETs (dashed red lines in bottom 2 rows) illustrates that the relationship between the lower bound of the escapement goal and the proposed SET depends on both the strength of depensation ($\gamma$) and the percentage of MSY targeted at the lower bound. While the SETs shown are smaller than the lower bounds of escapement goals that provide 90% of MSY, SETs can exceed the lower bounds of escapement goals that provide only 50% of MSY when depensatory dynamics are strong. That said, notice that if the stock assessment transitions to a gamma spawner-recruit model to allow for SET estimation then the range of escapements that provide x% of MSY under the gamma model narrows and shifts towards higher escapements relative to the Ricker model. Therefore, staff should expect changes to the escapement goal bounds when a stock is listed as a SOC and a SET is determined. 

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-setlb1
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The **theoretical** relationship between the range of escapements providing x% of MSY and the  SET (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory as spawning abundance decreases) for a single stock with 3 levels of depensatory spawner-recruit dynamics \u03B3."

SET_point <-
  expand.grid(lnalpha = seq(1, 2, 0.1), #c(1, 1.5, 2),
              beta = c(0.001, 0.0001, 0.00001, 0.000001),
              sigma = c(0.25, 0.5, 0.75),
              gamma = seq(1, 1.6, 0.1),
              pct_MSY = c(0.5, 0.6, 0.7, 0.8, 0.9)) %>%
  mutate(Smsy_Ricker = get_Smsy(lnalpha, beta),
         Smax = 1 / beta,
         Rmax = Ricker(lnalpha, beta, Smax),
         a = gamma_par(Smax, Rmax, gamma)[[1]],
         b = gamma_par(Smax, Rmax, gamma)[[2]],
         set = (gamma - 1) / b) %>%
  rowwise() %>%
  mutate(lb_Ricker = optimise(f = get_bounds, #'true' OYP bounds
                              interval = 1:Smsy_Ricker,
                              lnalpha = lnalpha,
                              beta = beta,
                              pct_MSY = pct_MSY,
                              correct = FALSE)$minimum,
         ub_Ricker = optimise(f = get_bounds, #'true' OYP bounds
                              interval = Smsy_Ricker:(Smsy_Ricker*3),
                              lnalpha = lnalpha,
                              beta = beta,
                              pct_MSY = 0.7,
                              correct = FALSE)$minimum,
         Smsy_gamma =
           optimize(
             function(a, b, g, x){
               SRgamma(alpha = a, beta = b, gamma = g, S = x) - x
             },
             interval = c(0, 4 * 1 / beta),
             maximum = TRUE,
             a = a,
             b = b,
             g = gamma)$maximum,
         MSY_gamma = SRgamma(alpha = a, beta = b, gamma = gamma, S = Smsy_gamma) - Smsy_gamma) %>%
  mutate(lb_gamma =
           optimize(
             function(a, b, g, pct_MSY, MSY_gamma, x){
               ((SRgamma(alpha = a, beta = b, gamma = g, S = x) - x) - pct_MSY * MSY_gamma)^2
             },
             interval = c(Smsy_gamma / 10, Smsy_gamma),
             a = a,
             b = b,
             g = gamma,
             pct_MSY = pct_MSY,
             MSY = MSY_gamma)$minimum,
         ub_gamma =
           optimize(
             function(a, b, g, pct_MSY, MSY_gamma, x){
               ((SRgamma(alpha = a, beta = b, gamma = g, S = x) - x) - pct_MSY * MSY_gamma)^2
             },
             interval = c(Smsy_gamma, Smsy_gamma * 3),
             a = a,
             b = b,
             g = gamma,
             pct_MSY = 0.7,
             MSY = MSY_gamma)$minimum)

SET_point %>%
  filter(pct_MSY %in% c(0.5, 0.9),
         gamma %in% c(1, 1.3, 1.6),
         lnalpha == 1.5,
         beta == 0.0001,
         sigma == 0.25) %>%
  mutate(curves = list(data.frame(S = rep(seq(0, 15000, 100), times = 3),
                                  R = SRgamma(a, b, gamma, rep(seq(0, 15000, 100), times = 3))))) %>%
  unnest(curves) %>%
  ggplot(aes(x = S, y = R)) +
  geom_line() +
  geom_rect(aes(xmin = lb_gamma, xmax = ub_gamma, ymin = -Inf, ymax = Inf), alpha = 0.005, fill = "green") +
  geom_vline(aes(xintercept = set), color = "red", linetype = 2) +
  geom_abline(aes(intercept = 0, slope = 1))+
  facet_grid(paste0("\u03B3: ", ifelse(gamma == 1, "1 (Ricker)", gamma)) ~ paste0("%MSY @ lb: ", pct_MSY))
```

To obtain a more comprehensive look at the relationship between the proposed SET and the lower bound of the escapement goal we have to consider variability in stock productivity (@fig-setlb2). Notice that there are 2 significant mitigating factors for situations when the proposed SET exceeds the lower bound of the escapement goal:

1.  If we are estimating an SET using the gamma spawner-recruit relationship we should modify the goal range to be consistent with the new relationship. In general, switching the assumed spawner-recruit relationship from a non-depensatory relationship (dashed lines in @fig-setlb2) to a depensatory relationship (solid lines in @fig-setlb2) when estimating the escapement goal range will increase the lower bound of the goal and decrease instances where the SET exceeds the lower bound of the goal.

2.  Cases where the lower bound of the escapement goal remain below the proposed SET after adjusting the goals to account for depensatory spawner-recruit dynamics represent situations where the department is fishing very aggressively on a low productivity stock and/or on a stock with strong depensatory dynamics... combinations which are likely very rare. It's more likely that when the department has chosen to fish aggressively the stock is either highly productive, depensatory behavior is moderate (small or medium $\gamma$), or both.

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-setlb2
#| fig.height: 4
#| fig.width: 8
#| fig.cap: "The **theoretical** relationship between the SET (defined as the point where spawner-recruit dynamics switch from compensatory to depensatory as spawning abundance decreases) and the lower bound of the escapement goal as a function of productivity \u03B1, strength of depensatory dynamics \u03B3 and 5 yield objectives at the lower bound of the escapement goal."

SET_point %>%
  filter(lnalpha %in% c(1, 1.5, 2)) %>%
  mutate(pct_lbRicker = set / lb_Ricker,
         pct_lbgamma = set / lb_gamma) %>%
  pivot_longer(cols = c("pct_lbRicker", "pct_lbgamma"),
               names_to = "Reference",
               values_to = "Percentage") %>%
  ggplot(aes(x = gamma, y = Percentage, color = as.character(lnalpha), linetype = Reference)) +
    geom_line() +
    geom_hline(aes(yintercept = 1)) +
    scale_x_continuous(breaks = c(1, 1.3, 1.6)) +
    scale_y_continuous(name = "SET / EG lower bound") +
    scale_color_discrete(name = "ln(\u03B1)") +
    scale_linetype_manual(name = "Goal Reference",
                          labels = c("gamma SR", "Ricker SR"),
                          values = c(1,2)) +
    facet_grid(. ~ paste0("%MSY @ lb: ", pct_MSY)) #beta makes no difference
```

#### Escapement Goal Lower Bound

While the SET is clearly a limit reference point how should we think about the lower bound of the escapement goal? Escapement goals exist to allow for imprecision in fishery management actions targeting $S_{msy}$. However, with respect to the department's SOC recommendations (@sec-recs) the lower bound of the escapement goal is utilized as a limit reference point which indicates sustainable yield is at risk. The lower bound of the escapement goal functions as a limit reference point for 2 reasons: 1) it represents a limit that fishery managers try to stay above, and 2) since the lower bound of the escapement goal is evaluated against **run** size a SOC listing indicates biological issues so severe that a fishery can no longer provide sustainable yield. In this sense, while the lower bound of the escapement goal exists to allow managers to *target* a management objective it can also express a *limit* below which sustained yield is sacrificed. 

In @sec-refSET we suggested that as part of the transition into conservation based management while in SOC status a gamma spawner-recruit model should be used to estimate both a SET and update the escapement goal range to account for possible depensatory spawner recruit dynamics. When the spawner-recruit relationship used to estimate escapement goals changes from the Ricker to the gamma escapement goal lower bounds increase (@fig-EGlbcomp) and the size of the increase varies with stock productivity and the strength of depensatory density dependence. Stocks with moderate depensatory density dependence ($\gammma=1.3$) would experience an $15-28$% increase in the lower bound of the escapement goal. It is important to remember this change would be associated with a SOC listing meaning it would be communicated as part of the stock's recovery plan as a limit reference point which would have to be exceeded before the stock could be delisted as a SOC and would indicate biological productivity had improved to such and extent that sustained yield was available. As such, a $15-28$% buffer before reinstating the stock's management plan would postpone SOC delisting until the stock was rebuilt sufficiently to allow for a meaningful fishery.    

```{r}
#| warning: FALSE
#| echo: FALSE
#| label: fig-EGlbcomp
#| fig.height: 4
#| fig.width: 8
#| fig.cap: "The **theoretical** relationship between the ratio of the escapement goal lower bound (EG lb) from  the gamma spawner-recruit model relative to the EG lb from the Ricker spawner-recruit model as a function of productivity ln(\u03B1) for 3 levels of depensatory density dependence (u03B3)."

SET_point %>%
  filter(gamma %in% c(1, 1.3, 1.6),
         pct_MSY == 0.9) %>%
  mutate(ratio = lb_gamma / lb_Ricker) %>%
  ggplot(aes(x = lnalpha, y = ratio, color = as.character(gamma))) +
  geom_line() +
  scale_x_continuous(breaks = c(1, 1.5, 2)) +
  scale_y_continuous(name = "Ratio: Gamma EG lb / Ricker EG lb") +
  scale_color_discrete(name = "\u03B3")
```


## Appendix B: Simulation Model {#sec-sim_model}

Abundance of salmon is generated by a S-R relationship that describes the number of fish expected to return (the "recruitment") from a given number of spawning fish (the "escapement"). The total expected recruitment $R_{c}$ produced from fish spawning in brood year $c$ follows the gamma formulation:

$$ R_{c}~=~\alpha_c S_{c}^\gamma e^{-\beta S_{c}} $$

where $S_{c}$ is the number of spawners, $\alpha_c$ is a measure of productivity, $\beta$ is a measure of compensatory density dependence, $\gamma$ is a measure of depensatory density dependence.

However, productivity varies among brood years, fluctuating around a central tendency. Time-varying productivity often manifests as serially correlated model residuals, so a lognormal error term with a lag of 1 year was included in the linearized form of the S-R relationship to represent realized recruitment.

$$ \textrm{ln}(R_{c})~=~\textrm{ln}(\alpha)+\gamma\textrm{ln}(S_{c})-\beta S_{c} +\phi \nu_{(c-1)}+\epsilon_{W} $$

where $\phi$ is the lag-1 serial correlation coefficient, $\nu_{c}$ are model residuals defined as

$$ \nu_{c}~=~\textrm{ln}(R_{c})-\textrm{ln}(\alpha)-\gamma\textrm{ln}(S_{c})+\beta S_{c} $$

and the $\epsilon_{W}$ are independently and normally distributed process errors with "white noise" variance $\sigma^2_{W}$.

Age at maturity ($p_{ca}$), is needed to distribute recruitment across calendar years and is treated as a constant within each brood year. The abundance $N_{ya}$ of age $a$ salmon in calendar year $y$ is the product of the age at maturity scalar and the total return (recruitment) $R_{c}$ for from brood year $c=y−a$:

$$ N_{ya}~=~p_{(y-a)a}R_{(y-a)} $$

Total run $N_{y}$ during calendar year $y$ is the sum of abundance at age across all ages:

$$ N_{y}~=~\sum_{a} N_{ya} $$

Instantaneous fishing mortality $F_y$ is a function of the annual harvest rate $U_y$ and used to calculate escapement $S_y$:

$$ S_{y}~=~N_ye^{-F_y} $$

Where $$F_{y}=-\textrm{log}(1-U_y)\textrm{exp}(\epsilon_F)$$ with $\epsilon_{F}~\sim~\textrm{Normal}(0, \sigma^2_{F})$.

The harvest process used in these simulations mimics standard ADF&G fisheries management, i.e. managers target a harvest rate that will result in an escapement between the lower and upper bounds of the escapement goal range. The annual harvest rate $U_{y}$, was modeled as a function of the projected total run $N_{y}^{proj.}$, both bounds of the escapement goal $lb$ and $ub$, and the power of the fishery:

$$ U_{y}~=~\textrm{f}(N_y^{proj.},~lb,~ub,~power) $$

Where $N_y^{proj.}=N_y \textrm{exp}(\epsilon_N)$ with $\epsilon_{N}~\sim~\textrm{Normal}(0, \sigma^2_{N})$. To determine annual harvest rates the following algorithm was used:

$$ U_y^{goal} = \textrm{minimum}(\textrm{Uniform}(U_{ub}, U_{lb}),~power) $$

where

$$ U_{lb} = \textrm{if}(N_Y^{proj.} > lb)~\frac{N_y^{proj.} - lb}{N_y^{proj.}}~\textrm{else}~0 $$

$$ U_{ub} = \textrm{if}(N_Y^{proj.} > ub)~\frac{N_y^{proj.} - ub}{N_y^{proj.}}~\textrm{else}~0 $$

and $power$ represent the maximum harvest rate the fishery is capable of producing. The lower bound of the escapement goal was varied across simulations but was set as the escapement that predicted a mean return which produced x% of MSY while the upper bound was was the escapement that predicted a mean return which produced 70% of MSY using historical productivity values and assuming non-depensatory dynamics.

Simulated datasets also tracked stock escapement's relative to the lower bound of the escapement goal. Stocks were designated a SOC when the annual run size was less than the lower bound of the escapement goal in at least 4 of the last 5 years. Stock of concern designations were removed the annual run size exceeded the lower bound of the escapement goal in at least 4 of the last 5 years.

## Appendix C: Spawner-Recruit Analysis Jags Code {#sec-analysis_mod}

```{r}
#| echo: FALSE
lines <- readLines("..\\scripts\\gamma_RS_change_scale.txt")
gluedown::md_text(lines)
```
