---
title: "SOC_conservation"
author: "Adam Reimer"
format:
  html:
    embed-resources: true
editor: visual
---

```{r include = FALSE}
packs <- c("tidyverse", "ggforce", "RcppRoll", "knitr", "paletteer")
lapply(packs, require, character.only = TRUE)

# source functions
function_files <- list.files(path="..\\functions")
lapply(function_files, function(x) source(paste0("..\\functions\\", x)))

vec_lnalpha <- seq(1, 2, length.out = 3)
vec_sigW <- seq(0.25, 0.75, length.out = 3)
vec_phi <- seq(0, .7, length.out = 3)
beta <- 0.0001
df_power <- data.frame(lnalpha = vec_lnalpha,
                       power = c(0.6, 0.7, 0.8)) #how to pick these. High for SOC sims. Should be lower for OPY sims.
input <- 
  expand.grid(lnalpha = vec_lnalpha, sigW = vec_sigW, phi = vec_phi) %>%
  mutate(beta = beta, 
         Smsy = get_Smsy(lnalpha, beta, TRUE, sigma = sigW, phi = phi),
         lb_eggers = Smsy * 0.8, #Egger bounds
         ub_eggers = Smsy * 1.6) %>%
  rowwise() %>%
  mutate(lb_pctMSY = optimise(get_bounds, #'true' OYP bounds
                              1:Smsy, 
                              lnalpha = lnalpha, 
                              beta = beta,
                              pct_MSY = 0.9,
                              correct = TRUE,
                              sigma = sigW,
                              phi = phi)$minimum,
          ub_pctMSY = optimise(get_bounds, 
                              Smsy:(Smsy*5), 
                              lnalpha = lnalpha, 
                              beta = beta,
                              pct_MSY = 0.7,
                              correct = TRUE,
                              sigma = sigW,
                              phi = phi)$minimum) %>%
  ungroup() %>%
  left_join(df_power, by = "lnalpha")

Chinook_age <- c('3' = 0.1, '4' = 0.2, '5' = 0.3, '6' = 0.38, '7' = 0.02)

input_sims = 5000
```

## Spawner-Recruit Dynamics

In fisheries we typically assume compensatory population dynamics meaning that R/S increases as spawning abundance decreases[^1] (red lines in @fig-gamma). These dynamics are common and allow for a harvestable surplus. They also mean that at any threshold spawning abundance we would expect R/S to increase below the threshold and decrease above the threshold. Unfortunately this behavior is inconsistent with the definition of a Sustainable Escapement Threshold which implies that there is a spawning abundance **below** which R/S will decrease.

[^1]: i.e. the population *compensates* for a reduction in it's size by producing more recruits

The scenario envisioned in the SET definition has been described... it's called decompensatory dynamics... but has only been rarely observed[^2]. My best guess is that decompensatory dynamics do exist but at low enough levels of spawning abundance that they have been rarely observed because they have been actively avoided by fishery managers. We also lack a well established and vetted decompensatory SR relationship, although one option in shown in @fig-gamma. Decompensatory dynamics mean exactly what you might guess, R/S decreases as spawning abundance decreases (see the green and blue lines in @fig-gamma). This spawner-recruit relationship implies there is a threshold where compensatory dynamics end and decompensatory dynamics begin as spawning abundance decreases (dots in @fig-gamma). In some situations an unstable population equilibrium (low abundance where the blues line cross the black lines in @fig-gamma) can exist meaning stocks with a spawning abundance above that point will increase in size while stocks with a spawning abundance below that size will decrease in abundance.

[^2]: At the population scale. There are examples of specific mortality mechanisms becoming more efficient at lower levels of abundance (i.e. being decompensatory). Think brown bear standing at the top of a waterfall.

```{r, echo = FALSE, warning = FALSE}
#| label: fig-gamma
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Spawner-recruit dynamics under compensatory (red line) and decompensatory (green and blue lines) assumptions. Dots and dot-dash lines represent the point where SR dynamics shift from decompensatory to compensatory as you increase spawning abundance. The point where the blue line cross the black line and associated blue dashed lines represent an unstable equilibria where populations with spawning abundances below that point would tend towards extinction in a deterministic relationship."

#example plot
#parameter set
temp_par <- gamma_par(1 / beta, Ricker(1.5, 0.0001, 1 / beta), c(1, 1.1, 1.6))

#depensation points
dat_dep <- 
  as.data.frame(temp_par) %>%
  filter(c != 1) %>%
  rowwise() %>%
  mutate(S = uniroot(function(S) {-a * S^(c-2) * (b * S - c + 1)*exp(-b * S)}, c(1, 10000), tol = 0.00001)$root,
         R = SRgamma(a, b, c, S = S),
         logRS = log(SRgamma(a, b, c, S = S) / S),
         gamma = as.character(c)) %>%
  ungroup() %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value")

#critical values
dat_crit <- 
  as.data.frame(temp_par) %>%
  filter(c > 1.2) %>%
  rowwise() %>%
  mutate(S = uniroot(function(S) {SRgamma(a, b, c, S) - S}, c(5, 2500), tol = 0.00001)$root,
         R = SRgamma(a, b, c, S = S),
         logRS = log(SRgamma(a, b, c, S = S) / S),
         gamma = as.character(c)) %>%
  ungroup() %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value")

pal <- scales::hue_pal()(3)

#create plot
data.frame(S = rep(seq(0, 20000, length.out = 100), times = length(temp_par[[3]])),
           alpha = rep(temp_par[[1]], each = 100),
           beta = rep(temp_par[[2]], each = 100),
           gamma = rep(temp_par[[3]], each = 100)) %>%
  mutate(R = SRgamma(alpha =  alpha, beta = beta, gamma = gamma, S),
         logRS = log(R / S)) %>%
  pivot_longer(c(R, logRS), names_to = "Parameter", values_to = "Value") %>%
  ggplot(aes(x = S, y = Value, color = as.character(gamma))) +
  geom_line() +
  geom_point(data = dat_dep) +
  geom_segment(data = dat_dep, aes(xend = S, y = -Inf, yend = Value), linetype = 4) +
  geom_segment(data = dat_crit, aes(xend = S, y = -Inf, yend = Value), linetype = 2) +  
  geom_abline(aes(slope = x, intercept = y), data.frame(x = 1, y = 0, Parameter = "R")) +
  geom_hline(aes(yintercept = y), data.frame(y = 0, Parameter = "logRS")) +
  scale_x_continuous(breaks = seq(0, 20000, 2500)) +
  scale_color_manual(name = "Gamma", 
                     labels = c("1 (Ricker)", "1.1", "1.6"),
                     values = pal) +
  theme_bw() +
  facet_grid(Parameter ~ ., scales = "free_y")
```

As figure @fig-gamma demonstrates decompensatory spawner-recruit relationships contain inflection points that could be used to define a SET. Recall that we don't use a decompensatory relationship to model salmon population dynamics. Why not? I'd suggest it's partially because we lack empirical evidence for their existence, partially for parsimony (2 parameters instead of 3), and partially because of estimatability of the extra parameter. This is easy to understand as weak decompensatory ($\gamma=1.1$) dynamics (red lines in @fig-SR) result in SR relationships which are nearly indistinguishable from a Ricker relationship (black lines in @fig-SR) under either of our productivity scenarios.

```{r, include = FALSE}
input <- 
  input %>%
  rowwise() %>%
  mutate(Rmax = Ricker(lnalpha = get_lnalpha_p(lnalpha, beta, sigW, phi), beta = beta, S = 1 / beta),
         Rmax_Seq = Ricker(lnalpha = lb_pctMSY * beta, beta = beta, S = 1 / beta),
         Seq = get_lnalpha_p(lnalpha, beta, sigW, phi) / beta,
         c = 1.1,
         a = gamma_par(1 / beta, Rmax, c)[[1]],
         b = gamma_par(1 / beta, Rmax, c)[[2]],
         a_Seq = gamma_par(1 / beta, Rmax_Seq, c)[[1]],
         b_Seq = gamma_par(1 / beta, Rmax_Seq, c)[[2]]) %>%
  rowwise() %>%
  ungroup()

gamma_plots <- list()
for(i in 1:length(unique(input$lnalpha))){
  gamma_plots[[i]] <- 
    input %>%
    slice(rep(1:n(), each = 251)) %>% 
    mutate(S = rep(seq(0, 5 * 1 / max(beta), by = 200), times = nrow(input)),
           R_Ricker = Ricker(lnalpha = get_lnalpha_p(lnalpha, beta, sigW, phi), beta = beta, S = S),
           RSeq_Ricker = Ricker(lnalpha = lb_pctMSY * beta, beta = beta, S = S),
           R_gamma = SRgamma(alpha = a, beta = b, gamma = c, S = S),
           RSeq_gamma = SRgamma(alpha = a_Seq, beta = b_Seq, gamma = c, S = S)) %>%
    ggplot(aes(x = S, y = R_Ricker)) +
    geom_rect(aes(xmin = lb_pctMSY, xmax = ub_pctMSY, ymin = -Inf, ymax = Inf), fill = "grey95") +
    geom_line(color = pal[1]) +
    geom_line(aes(y = RSeq_Ricker), color = pal[1], linetype = 2) +
    geom_line(aes(y = R_gamma), color = pal[2]) +
    geom_line(aes(y = RSeq_gamma), color = pal[2], linetype = 2) +
    geom_abline() +
    scale_y_continuous(name = "R") +
    theme_bw() +
    facet_grid_paginate(paste0("\u03C6: ", phi) ~ paste0("ln(\u03B1): ", lnalpha) + paste0("\u03C3: ", sigW), 
                        #scales = "free_y",
                        ncol = 3, nrow = 3, page = i)
} 
```

```{r, echo = FALSE, warning = FALSE}
#| label: fig-SR
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Spawner-recruit dynamics under compensatory (black lines) and decompensatory (red lines) assumptions for both historical and low productivity scenarios."
gamma_plots[[2]] + coord_cartesian(xlim = c(0, 30000), ylim = c(0, 30000))
```

That said, the ability of the stock to replace itself is severely compromised under the low productivity scenario both because the safety margin provided by the compensatory dynamics assumption is erased and because decompensatory dynamics barely replace themselves at any level of spawning escapement.

```{r include = FALSE}
lnRS_plots <- list()
for(i in 1:length(unique(input$lnalpha))){
  lnRS_plots[[i]] <- 
    input %>%
    slice(rep(1:n(), each = 201)) %>% 
    mutate(S = rep(seq(0, 6000, by = 6000*1/200), times = nrow(input)),
           R_Ricker = Ricker(lnalpha = get_lnalpha_p(lnalpha, beta, sigW, phi), beta = beta, S = S),
           RSeq_Ricker = Ricker(lnalpha = lb_pctMSY * beta, beta = beta, S = S),
           lnRS_Ricker = log(R_Ricker / S),
           lnRSSeq_Ricker = log(RSeq_Ricker / S),
           R_gamma = SRgamma(alpha = a, beta = b, gamma = c, S = S),
           RSeq_gamma = SRgamma(alpha = a_Seq, beta = b_Seq, gamma = c, S = S),
           lnRS_gamma = log(R_gamma / S),
           lnRSSeq_gamma = log(RSeq_gamma / S)) %>%
    rowwise() %>%
    mutate(dep = uniroot(function(S) {-a * S^(c-2) * (b * S - c + 1)*exp(-b * S)}, c(0, 5000), tol = 0.00001)$root,
           lnRS_gamma_dep = log(SRgamma(a, b, c, S = dep) / dep),
           dep_Seq = uniroot(function(S) {-a_Seq * S^(c-2) * (b_Seq * S - c + 1)*exp(-b_Seq * S)}, c(0, 5000), tol = 0.00001)$root,
           lnRS_gamma_dep_Seq = log(SRgamma(a_Seq, b_Seq, c, S = dep_Seq) / dep_Seq)) %>%
    ungroup() %>%
    ggplot(aes(x = S, y = lnRS_Ricker)) +
    geom_rect(aes(xmin = lb_pctMSY, xmax = Inf, ymin = -Inf, ymax = Inf), fill = "grey95") +
    geom_line(color = pal[1]) +
    geom_line(aes(y = lnRSSeq_Ricker), color = pal[1], linetype = 2) +
    geom_line(aes(y = lnRS_gamma), color = pal[2]) +
    geom_line(aes(y = lnRSSeq_gamma), color = pal[2], linetype = 2) +
    geom_point(aes(x = dep, y = lnRS_gamma_dep), color = pal[2]) +
    geom_point(aes(x = dep_Seq, y = lnRS_gamma_dep_Seq), color = pal[2]) +
    geom_hline(yintercept = 0) +
    theme_bw() +
    facet_grid_paginate(paste0("\u03C6: ", phi) ~ paste0("ln(\u03B1): ", lnalpha) + paste0("\u03C3: ", sigW), 
                        #scales = "free_y",
                        ncol = 3, nrow = 3, page = i)
} 
```

```{r, echo = FALSE, warning = FALSE}
#| label: fig-lnRS
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "The relationship between the natural logarithm of recruits per spawner and spawning abundance at low spawning abundance levels for compensatory (black lines) and decompensatory (red lines) spawner-recruit dynamics for both historical and low productivity scenarios."
lnRS_plots[[2]]
```

These minor differences could have profound management and conservation implications. If we simulate populations using compensatory and weak decompensatory ($\gamma=1.1$) dynamics we see that compensatory dynamics result in more management actions in most cases and extinction in some cases.

```{r, include = FALSE}
sim_Seq <- 
  mapply(FUN = sim_Ricker,
         lnalpha = input$lb_pctMSY*beta,  #reduced ln_alpha
         sigW = input$sigW,
         phi = input$phi,
         lb_goal = input$lb_pctMSY,
         ub_goal = input$ub_pctMSY,
         MoreArgs = list(beta = beta,
                         age0 = Chinook_age,
                         Sims0 = input_sims,
                         sigN = 0.2,
                         sigF = 0,
                         Hfun = H_goal),
         SIMPLIFY = FALSE) %>%
  lapply(function(x) rename(x, lnalpha_red = lnalpha)) %>%
  do.call("rbind", .) %>%
  left_join(input[, c("lnalpha", "lb_pctMSY", "ub_pctMSY")], by = c("lb_goal" = "lb_pctMSY", "ub_goal" = "ub_pctMSY"))

sim_Seq_gamma <- 
  mapply(FUN = sim_SRgamma, 
         alpha = input$a_Seq,
         beta = input$b_Seq,
         gamma = input$c,
         sigW = input$sigW, 
         phi = input$phi,
         lb_goal = input$lb_pctMSY,
         ub_goal = input$ub_pctMSY,
         MoreArgs = list(age0 = Chinook_age,
                         Sims0 = input_sims, 
                         sigN = 0.2,
                         sigF = 0,
                         Hfun = H_goal),
         SIMPLIFY = FALSE) %>%
  do.call("rbind", .) %>%
  left_join(input[, c("lnalpha", "lb_pctMSY", "ub_pctMSY")], by = c("lb_goal" = "lb_pctMSY", "ub_goal" = "ub_pctMSY"))

# * * Compare to sim_Seq from Ricker  -----------------------------------------------
# * * * pct of time in each SOC designation  -----------------------------------------------
temp_Seq_gamma <- sim_Seq_gamma %>%
  select(-alpha, -beta, -gamma) %>%
  mutate(scenario = "Seq_gamma")
temp_Seq2 <- sim_Seq %>%
  mutate(scenario = "Seq") %>%
  select(-lnalpha_red, -lnalpha.y)
Seq_combined <- 
  rbind(temp_Seq2, temp_Seq_gamma) %>%
  group_by(lnalpha, sigW, phi, scenario) %>%
  select(-F, -U, -N) %>% 
  mutate(change = case_when(SOC != lag(SOC) ~ TRUE, TRUE ~ FALSE),
         n_change = cumsum(change),
         deviation_lb = (S - lb_goal) / lb_goal) %>%
  group_by(lnalpha, sigW, phi, scenario, n_change, SOC) %>%
  summarise(length = length(n_change),
            deviation_lb = mean(deviation_lb),
            miss = sum((S < lb_goal)) / length,
            mean_S = mean(S))

Seq_pct_SOC <- list()
for(i in 1:length(unique(input$lnalpha))){
  Seq_pct_SOC[[i]] <-
    Seq_combined %>% 
    group_by(lnalpha, sigW, phi, scenario, SOC) %>% 
    summarize(pct_SOC = sum(length)/input_sims) %>% 
    ggplot(aes(x = scenario, y  = pct_SOC, fill = SOC)) + 
    geom_bar(stat = "identity") +
    theme_bw() +
    theme(axis.text.x = element_text(angle = 5)) +
    scale_x_discrete(name = "Spawner-Recruit Dynamics", 
                     breaks = c("Seq", "Seq_gamma"),
                     labels = c("Compensatory", "Decompensatory")) +
    scale_y_continuous(name = "Percent of Simulations") +
    facet_grid_paginate(paste0("\u03C6: ", phi) ~ paste0("ln(\u03B1): ", lnalpha) + paste0("\u03C3: ", sigW), 
                        ncol = 3, nrow = 3, page = i)
}

```

```{r, echo = FALSE, warning = FALSE}
#| label: fig-SeqRickergamma
#| fig.height: 6
#| fig.width: 8
#| fig.cap: "Percent of simulated runs in each stock of concern designation for 27 possible stock recruit parameter combinations with low productivity and under compensatory and decompensatory SR dynamics."
#| layout-nrow: 3
#| fig-subcap: 
#|   - "Low productivity: log(\u03B1) = 1.0"
#|   - "Low productivity: log(\u03B1) = 1.5"
#|   - "Low productivity: log(\u03B1) = 2.0"
Seq_pct_SOC[[1]]
Seq_pct_SOC[[2]]
Seq_pct_SOC[[3]]
```

It's important to note that we are pretty far ahead of anything we know at this point in this document... we don't know if current, low ocean productivity is best modeled by assuming a stable equilibrium at the lower bound of the historic escapement goal, we don't know if decompensatory SR dynamics exist, we don't know how to parameterize a decompensatory SR relationship, and we don't know what those parameter values should be. What we do know is that we are experiencing never before seen low escapements which could provide empirical answers to these unknowns.

I suggest that these questions should be the basis for research plans associated with stocks of management concern. In the near term our scientists and biometricians can busy themselves with developing methods to detect and estimate decompensatory dynamics. When tasked with how to address fishery disasters we should be focusing on improving our stock assessments with an eye towards detecting these dynamics early.
